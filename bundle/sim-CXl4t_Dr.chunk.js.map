{"version":3,"file":"sim-CXl4t_Dr.chunk.js","sources":["../../../ui/warrior/fury/presets.ts","../../../ui/warrior/fury/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils';\nimport { Consumes, Faction, Flask, Food, Glyphs, Potions } from '../../core/proto/common';\nimport { SavedTalents } from '../../core/proto/ui';\nimport { FuryWarrior_Options as WarriorOptions, WarriorMajorGlyph, WarriorMinorGlyph, WarriorShout } from '../../core/proto/warrior';\nimport FuryApl from './apls/fury.apl.json';\nimport FurySunderApl from './apls/fury_sunder.apl.json';\nimport P1FuryGear from './gear_sets/p1_fury.gear.json';\nimport P2FuryGear from './gear_sets/p2_fury.gear.json';\nimport P3FuryAllianceGear from './gear_sets/p3_fury_alliance.gear.json';\nimport P3FuryHordeGear from './gear_sets/p3_fury_horde.gear.json';\nimport P4FuryAllianceGear from './gear_sets/p4_fury_alliance.gear.json';\nimport P4FuryHordeGear from './gear_sets/p4_fury_horde.gear.json';\nimport PreraidFuryGear from './gear_sets/preraid_fury.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_FURY_PRESET = PresetUtils.makePresetGear('Preraid Fury', PreraidFuryGear);\nexport const P1_FURY_PRESET = PresetUtils.makePresetGear('P1 Fury', P1FuryGear);\nexport const P2_FURY_PRESET = PresetUtils.makePresetGear('P2 Fury', P2FuryGear);\nexport const P3_FURY_PRESET_ALLIANCE = PresetUtils.makePresetGear('P3 Fury [A]', P3FuryAllianceGear, { faction: Faction.Alliance });\nexport const P3_FURY_PRESET_HORDE = PresetUtils.makePresetGear('P3 Fury [H]', P3FuryHordeGear, { faction: Faction.Horde });\nexport const P4_FURY_PRESET_ALLIANCE = PresetUtils.makePresetGear('P4 Fury [A]', P4FuryAllianceGear, { faction: Faction.Alliance });\nexport const P4_FURY_PRESET_HORDE = PresetUtils.makePresetGear('P4 Fury [H]', P4FuryHordeGear, { faction: Faction.Horde });\n\nexport const ROTATION_FURY = PresetUtils.makePresetAPLRotation('Fury', FuryApl);\nexport const ROTATION_FURY_SUNDER = PresetUtils.makePresetAPLRotation('Fury + Sunder', FurySunderApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\n\nexport const FuryTalents = {\n\tname: 'Fury',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '32002301233-305053000520310053120500351',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: WarriorMajorGlyph.GlyphOfWhirlwind,\n\t\t// \tmajor2: WarriorMajorGlyph.GlyphOfHeroicStrike,\n\t\t// \tmajor3: WarriorMajorGlyph.GlyphOfExecution,\n\t\t// \tminor1: WarriorMinorGlyph.GlyphOfCommand,\n\t\t// \tminor2: WarriorMinorGlyph.GlyphOfShatteringThrow,\n\t\t// \tminor3: WarriorMinorGlyph.GlyphOfCharge,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultOptions = WarriorOptions.create({\n\tclassOptions: {\n\t\tstartingRage: 0,\n\t\tuseShatteringThrow: true,\n\t\tshout: WarriorShout.WarriorShoutCommanding,\n\t},\n\tuseRecklessness: true,\n\tdisableExpertiseGemming: false,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodSpicedWormBurger,\n\tdefaultPotion: Potions.GolembloodPotion,\n\tprepopPotion: Potions.GolembloodPotion,\n});\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs';\nimport * as OtherInputs from '../../core/components/other_inputs';\nimport * as Mechanics from '../../core/constants/mechanics';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl';\nimport { Debuffs, Faction, IndividualBuffs, PartyBuffs, PseudoStat, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as WarriorInputs from '../inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecFuryWarrior, {\n\tcssClass: 'fury-warrior-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Warrior),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatArmor,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps, PseudoStat.PseudoStatOffHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatArmor,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecFuryWarrior>) => {\n\t// \t//let stats = new Stats();\n\t// \tif (!player.getInFrontOfTarget()) {\n\t// \t\t// When behind target, dodge is the only outcome affected by Expertise.\n\t// \t\t//stats = stats.addStat(Stat.StatExpertise, player.getTalents().weaponMastery * 4 * Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION);\n\t// \t}\n\t// \treturn {\n\t// \t//\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P3_FURY_PRESET_ALLIANCE.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatStrength]: 2.72,\n\t\t\t\t[Stat.StatAgility]: 1.82,\n\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t[Stat.StatExpertise]: 2.55,\n\t\t\t\t[Stat.StatMeleeHit]: 0.79,\n\t\t\t\t[Stat.StatMeleeCrit]: 2.12,\n\t\t\t\t[Stat.StatMeleeHaste]: 1.72,\n\t\t\t\t[Stat.StatArmorPenetration]: 2.17,\n\t\t\t\t[Stat.StatArmor]: 0.03,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 6.29,\n\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 3.58,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.FuryTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tbloodFrenzy: true,\n\t\t\tmangle: true,\n\t\t\tsunderArmor: true,\n\t\t\tcurseOfElements: true,\n\t\t\tebonPlaguebringer: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [WarriorInputs.ShoutPicker(), WarriorInputs.Recklessness(), WarriorInputs.ShatteringThrow()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\t// just for Bryntroll\n\t\tBuffDebuffInputs.SpellDamageDebuff,\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tWarriorInputs.StartingRage(),\n\t\t\tWarriorInputs.StanceSnapshot(),\n\t\t\tWarriorInputs.DisableExpertiseGemming(),\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: true,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.FuryTalents],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_FURY, Presets.ROTATION_FURY_SUNDER],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_FURY_PRESET,\n\t\t\tPresets.P1_FURY_PRESET,\n\t\t\tPresets.P2_FURY_PRESET,\n\t\t\tPresets.P3_FURY_PRESET_ALLIANCE,\n\t\t\tPresets.P3_FURY_PRESET_HORDE,\n\t\t\tPresets.P4_FURY_PRESET_ALLIANCE,\n\t\t\tPresets.P4_FURY_PRESET_HORDE,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecFuryWarrior>): APLRotation => {\n\t\treturn Presets.ROTATION_FURY.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecFuryWarrior,\n\t\t\ttalents: Presets.FuryTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_FURY_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_FURY_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_FURY_PRESET_ALLIANCE.gear,\n\t\t\t\t\t4: Presets.P4_FURY_PRESET_ALLIANCE.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_FURY_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_FURY_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_FURY_PRESET_HORDE.gear,\n\t\t\t\t\t4: Presets.P4_FURY_PRESET_HORDE.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class FuryWarriorSimUI extends IndividualSimUI<Spec.SpecFuryWarrior> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecFuryWarrior>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_FURY_PRESET","PresetUtils.makePresetGear","P1_FURY_PRESET","P1FuryGear","P2_FURY_PRESET","P2FuryGear","P3_FURY_PRESET_ALLIANCE","P3FuryAllianceGear","faction","Faction","Alliance","P3_FURY_PRESET_HORDE","P3FuryHordeGear","Horde","P4_FURY_PRESET_ALLIANCE","P4FuryAllianceGear","P4_FURY_PRESET_HORDE","P4FuryHordeGear","ROTATION_FURY","PresetUtils.makePresetAPLRotation","FuryApl","ROTATION_FURY_SUNDER","FurySunderApl","FuryTalents","name","data","SavedTalents","create","DefaultOptions","WarriorOptions","classOptions","startingRage","useShatteringThrow","shout","WarriorShout","WarriorShoutCommanding","useRecklessness","disableExpertiseGemming","DefaultConsumes","Consumes","flask","Flask","FlaskOfEndlessRage","food","Food","FoodSpicedWormBurger","defaultPotion","Potions","GolembloodPotion","prepopPotion","SPEC_CONFIG","registerSpecConfig","Spec","SpecFuryWarrior","cssClass","cssScheme","PlayerClasses","getCssClass","Warrior","knownIssues","epStats","Stat","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatArmor","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","gear","Presets.P3_FURY_PRESET_ALLIANCE","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.FuryTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","debuffs","Debuffs","bloodFrenzy","mangle","sunderArmor","curseOfElements","ebonPlaguebringer","playerIconInputs","WarriorInputs.ShoutPicker","WarriorInputs.Recklessness","WarriorInputs.ShatteringThrow","includeBuffDebuffInputs","BuffDebuffInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","inputs","WarriorInputs.StartingRage","WarriorInputs.StanceSnapshot","WarriorInputs.DisableExpertiseGemming","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_FURY","Presets.ROTATION_FURY_SUNDER","Presets.PRERAID_FURY_PRESET","Presets.P1_FURY_PRESET","Presets.P2_FURY_PRESET","Presets.P3_FURY_PRESET_HORDE","Presets.P4_FURY_PRESET_ALLIANCE","Presets.P4_FURY_PRESET_HORDE","autoRotation","_player","rotation","raidSimPresets","spec","defaultFactionRaces","Unknown","Race","RaceUnknown","RaceHuman","RaceOrc","defaultGear","FuryWarriorSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"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"}