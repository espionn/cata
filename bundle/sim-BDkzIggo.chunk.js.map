{"version":3,"file":"sim-BDkzIggo.chunk.js","sources":["../../../ui/paladin/protection/presets.ts","../../../ui/paladin/protection/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { Consumes, Flask, Food, Potions } from '../../core/proto/common.js';\nimport {\n\tPaladinAura as PaladinAura,\n\tPaladinJudgement as PaladinJudgement,\n\tPaladinMajorGlyph,\n\tPaladinMinorGlyph,\n\tProtectionPaladin_Options as ProtectionPaladinOptions,\n} from '../../core/proto/paladin.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport DefaultApl from './apls/default.apl.json';\nimport P1Gear from './gear_sets/p1.gear.json';\nimport P2Gear from './gear_sets/p2.gear.json';\nimport P3Gear from './gear_sets/p3.gear.json';\nimport P4Gear from './gear_sets/p4.gear.json';\nimport P4PreraidGear from './gear_sets/p4_preraid.gear.json';\nimport PreraidGear from './gear_sets/preraid.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('P1 PreRaid Preset', PreraidGear);\nexport const P4_PRERAID_PRESET = PresetUtils.makePresetGear('P4 PreRaid Preset', P4PreraidGear);\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\nexport const ROTATION_DEFAULT = PresetUtils.makePresetAPLRotation('Default (969)', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\n\nexport const GenericAoeTalents = {\n\tname: 'Baseline Example',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-05005135200132311333312321-511302012003',\n\t\t// glyphs: {\n\t\t// \tmajor1: PaladinMajorGlyph.GlyphOfSealOfVengeance,\n\t\t// \tmajor2: PaladinMajorGlyph.GlyphOfRighteousDefense,\n\t\t// \tmajor3: PaladinMajorGlyph.GlyphOfDivinePlea,\n\t\t// \tminor1: PaladinMinorGlyph.GlyphOfSenseUndead,\n\t\t// \tminor2: PaladinMinorGlyph.GlyphOfLayOnHands,\n\t\t// \tminor3: PaladinMinorGlyph.GlyphOfBlessingOfKings,\n\t\t// },\n\t}),\n};\n\nexport const DefaultOptions = ProtectionPaladinOptions.create({\n\tclassOptions: {\n\t\taura: PaladinAura.RetributionAura,\n\t\tjudgement: PaladinJudgement.JudgementOfWisdom,\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfStoneblood,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.EarthenPotion,\n\tprepopPotion: Potions.EarthenPotion,\n});\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../../core/components/other_inputs.js';\nimport * as Mechanics from '../../core/constants/mechanics.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLAction, APLListItem, APLPrepullAction, APLRotation } from '../../core/proto/apl.js';\nimport { Cooldowns, Debuffs, Faction, IndividualBuffs, PartyBuffs, PseudoStat, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common.js';\nimport { PaladinMajorGlyph, PaladinSeal, ProtectionPaladin_Rotation as ProtectionPaladinRotation } from '../../core/proto/paladin.js';\nimport * as AplUtils from '../../core/proto_utils/apl_utils.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport { TypedEvent } from '../../core/typed_event.js';\nimport * as PaladinInputs from '../inputs.js';\n// import * as ProtInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecProtectionPaladin, {\n\tcssClass: 'protection-paladin-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Paladin),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellPower,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatExpertise,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecProtectionPaladin>) => {\n\t// \tlet stats = new Stats();\n\n\t// \tTypedEvent.freezeAllAndDo(() => {\n\t// \t\tif (\n\t// \t\t\tplayer.getMajorGlyphs().includes(PaladinMajorGlyph.GlyphOfSealOfVengeance) &&\n\t// \t\t\tplayer.getSpecOptions().classOptions?.seal == PaladinSeal.Vengeance\n\t// \t\t) {\n\t// \t\t\tstats = stats.addStat(Stat.StatExpertise, 10 * Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION);\n\t// \t\t}\n\t// \t});\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P3_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatArmor]: 0.07,\n\t\t\t\t[Stat.StatBonusArmor]: 0.06,\n\t\t\t\t[Stat.StatStamina]: 1.14,\n\t\t\t\t[Stat.StatStrength]: 1.0,\n\t\t\t\t[Stat.StatAgility]: 0.62,\n\t\t\t\t[Stat.StatAttackPower]: 0.26,\n\t\t\t\t[Stat.StatExpertise]: 0.69,\n\t\t\t\t[Stat.StatMeleeHit]: 0.79,\n\t\t\t\t[Stat.StatMeleeCrit]: 0.3,\n\t\t\t\t[Stat.StatMeleeHaste]: 0.17,\n\t\t\t\t[Stat.StatArmorPenetration]: 0.04,\n\t\t\t\t[Stat.StatSpellPower]: 0.13,\n\t\t\t\t[Stat.StatBlock]: 0.52,\n\t\t\t\t[Stat.StatBlockValue]: 0.28,\n\t\t\t\t[Stat.StatDodge]: 0.46,\n\t\t\t\t[Stat.StatParry]: 0.61,\n\t\t\t\t[Stat.StatDefense]: 0.54,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.33,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.GenericAoeTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tvampiricTouch: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgement: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tshadowAndFlame: true,\n\t\t\tbloodFrenzy: true,\n\t\t\tmangle: true,\n\t\t\texposeArmor: true,\n\t\t\tsunderArmor: true,\n\t\t\tvindication: true,\n\t\t\tthunderClap: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tPaladinInputs.AuraSelection(),\n\t\tPaladinInputs.JudgementSelection(),\n\t\t//PaladinInputs.StartingSealSelection()\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tPaladinInputs.UseAvengingWrath(),\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.GenericAoeTalents],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_DEFAULT],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.PRERAID_PRESET, Presets.P4_PRERAID_PRESET, Presets.P1_PRESET, Presets.P2_PRESET, Presets.P3_PRESET, Presets.P4_PRESET],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecProtectionPaladin>): APLRotation => {\n\t\treturn Presets.ROTATION_DEFAULT.rotation.rotation!;\n\t},\n\n\tsimpleRotation: (player: Player<Spec.SpecProtectionPaladin>, simple: ProtectionPaladinRotation, cooldowns: Cooldowns): APLRotation => {\n\t\tconst [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t\tconst holyShieldPrepull = APLPrepullAction.fromJsonString(`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48952}}},\"doAtValue\":{\"const\":{\"val\":\"-3s\"}}}`);\n\t\tconst divinePlea = APLPrepullAction.fromJsonString(`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":54428}}},\"doAtValue\":{\"const\":{\"val\":\"-1500ms\"}}}`);\n\t\tprepullActions.push(holyShieldPrepull, divinePlea);\n\n\t\tconst shieldOfRighteousness = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":61411}}}`,\n\t\t);\n\t\tconst hammerOfRighteousness = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":53595}}}`,\n\t\t);\n\t\tconst hammerOfWrath = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":48806}}}`);\n\t\tconst waitPrimary = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"and\":{\"vals\":[{\"gcdIsReady\":{}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":61411}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":53595}}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"min\":{\"vals\":[{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}}]}},\"rhs\":{\"const\":{\"val\":\"350ms\"}}}}]}},\"wait\":{\"duration\":{\"min\":{\"vals\":[{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}}]}}}}`,\n\t\t);\n\t\tconst consecration = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":48819}}}`);\n\t\tconst holyShield = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":48952}}}`);\n\t\tconst judgementOfWisdom = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":53408}}}`);\n\t\tconst waitSecondary = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"and\":{\"vals\":[{\"gcdIsReady\":{}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":61411}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":53595}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":48819}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":48952}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":53408}}}}}]}},\"wait\":{\"duration\":{\"min\":{\"vals\":[{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48819}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48952}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53408}}}]}}}}`,\n\t\t);\n\n\t\tactions.push(\n\t\t\t...([shieldOfRighteousness, hammerOfRighteousness, hammerOfWrath, waitPrimary, consecration, holyShield, judgementOfWisdom, waitSecondary].filter(\n\t\t\t\ta => a,\n\t\t\t) as Array<APLAction>),\n\t\t);\n\n\t\treturn APLRotation.create({\n\t\t\tprepullActions: prepullActions,\n\t\t\tpriorityList: actions.map(action =>\n\t\t\t\tAPLListItem.create({\n\t\t\t\t\taction: action,\n\t\t\t\t}),\n\t\t\t),\n\t\t});\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecProtectionPaladin,\n\t\t\ttalents: Presets.GenericAoeTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ProtectionPaladinSimUI extends IndividualSimUI<Spec.SpecProtectionPaladin> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecProtectionPaladin>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_PRESET","PresetUtils.makePresetGear","P4_PRERAID_PRESET","P4PreraidGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","ROTATION_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","GenericAoeTalents","name","data","SavedTalents","create","DefaultOptions","ProtectionPaladinOptions","classOptions","aura","PaladinAura","RetributionAura","judgement","PaladinJudgement","JudgementOfWisdom","DefaultConsumes","Consumes","flask","Flask","FlaskOfStoneblood","food","Food","FoodDragonfinFilet","defaultPotion","Potions","EarthenPotion","prepopPotion","SPEC_CONFIG","registerSpecConfig","Spec","SpecProtectionPaladin","cssClass","cssScheme","PlayerClasses","getCssClass","Paladin","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatMeleeHit","StatSpellHit","StatMeleeCrit","StatExpertise","StatMeleeHaste","StatArmorPenetration","StatSpellPower","StatArmor","StatBonusArmor","StatDefense","StatBlock","StatBlockValue","StatDodge","StatParry","StatResilience","StatNatureResistance","StatShadowResistance","StatFrostResistance","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","defaults","gear","Presets.P3_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.GenericAoeTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","vampiricTouch","debuffs","Debuffs","ebonPlaguebringer","shadowAndFlame","bloodFrenzy","mangle","exposeArmor","sunderArmor","vindication","thunderClap","playerIconInputs","PaladinInputs.AuraSelection","PaladinInputs.JudgementSelection","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","PaladinInputs.UseAvengingWrath","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_DEFAULT","Presets.PRERAID_PRESET","Presets.P4_PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P4_PRESET","autoRotation","_player","rotation","simpleRotation","player","simple","cooldowns","prepullActions","actions","AplUtils.standardCooldownDefaults","holyShieldPrepull","APLPrepullAction","fromJsonString","divinePlea","push","shieldOfRighteousness","APLAction","hammerOfRighteousness","hammerOfWrath","waitPrimary","consecration","holyShield","judgementOfWisdom","waitSecondary","filter","a","APLRotation","priorityList","map","action","APLListItem","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceBloodElf","defaultGear","ProtectionPaladinSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"02JAsBaA,EAAiBC,EAA2B,ueAC5CC,EAAoBD,EAA2B,oBAAqBE,GACpEC,EAAYH,EAA2B,YAAaI,GACpDC,EAAYL,EAA2B,YAAaM,GACpDC,EAAYP,EAA2B,YAAaQ,GACpDC,EAAYT,EAA2B,YAAaU,GAEpDC,EAAmBC,EAAkC,gBAAiBC,GAKtEC,EAAoB,CAChCC,KAAM,mBACNC,KAAMC,EAAaC,OAAO,CAAA,IAadC,EAAiBC,EAAyBF,OAAO,CAC7DG,aAAc,CACbC,KAAMC,EAAYC,gBAClBC,UAAWC,EAAiBC,qBAIjBC,GAAkBC,EAASX,OAAO,CAC9CY,MAAOC,EAAMC,kBACbC,KAAMC,EAAKC,mBACXC,cAAeC,EAAQC,cACvBC,aAAcF,EAAQC,gBC5CjBE,GAAcC,EAAmBC,EAAKC,sBAAuB,CAClEC,SAAU,4BACVC,UAAWC,EAAcC,YAAYD,EAAcE,SAEnDC,YAAa,GAGbC,QAAS,CACRC,EAAKC,YACLD,EAAKE,aACLF,EAAKG,YACLH,EAAKI,gBACLJ,EAAKK,aACLL,EAAKM,aACLN,EAAKO,cACLP,EAAKQ,cACLR,EAAKS,eACLT,EAAKU,qBACLV,EAAKW,eACLX,EAAKY,UACLZ,EAAKa,eACLb,EAAKc,YACLd,EAAKe,UACLf,EAAKgB,eACLhB,EAAKiB,UACLjB,EAAKkB,UACLlB,EAAKmB,eACLnB,EAAKoB,qBACLpB,EAAKqB,qBACLrB,EAAKsB,qBAENC,cAAe,CAACC,EAAWC,uBAE3BC,gBAAiB1B,EAAKW,eAEtBgB,aAAc,CACb3B,EAAK4B,WACL5B,EAAKY,UACLZ,EAAKa,eACLb,EAAKC,YACLD,EAAKE,aACLF,EAAKG,YACLH,EAAKI,gBACLJ,EAAKK,aACLL,EAAKO,cACLP,EAAKS,eACLT,EAAKQ,cACLR,EAAKU,qBACLV,EAAKW,eACLX,EAAKM,aACLN,EAAKc,YACLd,EAAKe,UACLf,EAAKgB,eACLhB,EAAKiB,UACLjB,EAAKkB,UACLlB,EAAKmB,eACLnB,EAAKoB,qBACLpB,EAAKqB,qBACLrB,EAAKsB,qBAkBNO,SAAU,CAETC,KAAMC,EAAkBD,KAExBE,UAAWC,EAAMC,QAChB,CACC,CAAClC,EAAKY,WAAY,IAClB,CAACZ,EAAKa,gBAAiB,IACvB,CAACb,EAAKC,aAAc,KACpB,CAACD,EAAKE,cAAe,EACrB,CAACF,EAAKG,aAAc,IACpB,CAACH,EAAKI,iBAAkB,IACxB,CAACJ,EAAKQ,eAAgB,IACtB,CAACR,EAAKK,cAAe,IACrB,CAACL,EAAKO,eAAgB,GACtB,CAACP,EAAKS,gBAAiB,IACvB,CAACT,EAAKU,sBAAuB,IAC7B,CAACV,EAAKW,gBAAiB,IACvB,CAACX,EAAKe,WAAY,IAClB,CAACf,EAAKgB,gBAAiB,IACvB,CAAChB,EAAKiB,WAAY,IAClB,CAACjB,EAAKkB,WAAY,IAClB,CAAClB,EAAKc,aAAc,KAErB,CACC,CAACU,EAAWC,uBAAwB,OAItCU,SAAUC,GAEVC,QAASC,EAA0BzE,KAEnC0E,YAAaC,EAEbC,UAAWC,EAAU3E,OAAO,CAC3B4E,kBAAkB,EAClBC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,oBAAoB,EACpBC,sBAAsB,EACtBC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,EACbC,iBAAiB,EACjBC,iBAAiB,EACjBC,WAAW,IAEZC,WAAYC,EAAW3F,OAAO,IAC9B4F,gBAAiBC,EAAgB7F,OAAO,CACvC8F,eAAe,IAEhBC,QAASC,EAAQhG,OAAO,CACvBO,WAAW,EACX0F,mBAAmB,EACnBC,gBAAgB,EAChBC,aAAa,EACbC,QAAQ,EACRC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,aAAa,KAKfC,iBAAkB,CACjBC,IACAC,KAIDC,wBAAyB,GACzBC,wBAAyB,GAEzBC,YAAa,CACZC,OAAQ,CACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACAC,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERrD,QAAS,CAACC,GAEVqD,UAAW,CAACC,GAEZ9D,KAAM,CAAC+D,EAAwBC,EAA2BC,EAAmBC,EAAmBjE,EAAmBkE,IAGpHC,aAAeC,GACPP,EAAyBQ,SAASA,SAG1CC,eAAgB,CAACC,EAA4CC,EAAmCC,KAC/F,MAAOC,EAAgBC,GAAWC,EAAkCH,GAE9DI,EAAoBC,EAAiBC,eAAe,8FACpDC,EAAaF,EAAiBC,eAAe,kGACpCL,EAAAO,KAAKJ,EAAmBG,GAEvC,MAAME,EAAwBC,EAAUJ,eACvC,uKAEKK,EAAwBD,EAAUJ,eACvC,uKAEKM,EAAgBF,EAAUJ,eAAe,+CACzCO,EAAcH,EAAUJ,eAC7B,sfAEKQ,EAAeJ,EAAUJ,eAAe,+CACxCS,EAAaL,EAAUJ,eAAe,+CACtCU,EAAoBN,EAAUJ,eAAe,+CAC7CW,EAAgBP,EAAUJ,eAC/B,upBASD,OANQJ,EAAAM,QACH,CAACC,EAAuBE,EAAuBC,EAAeC,EAAaC,EAAcC,EAAYC,EAAmBC,GAAeC,QACrIC,GAAAA,KAIAC,EAAY7J,OAAO,CACzB0I,eAAAA,EACAoB,aAAcnB,EAAQoB,KAAIC,GACzBC,EAAYjK,OAAO,CAClBgK,cAGF,EAGFE,eAAgB,CACf,CACCC,KAAM3I,EAAKC,sBACX6C,QAASC,EAA0BzE,KACnC0E,YAAaC,EACbL,SAAUC,GACV+F,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,UACzB,CAACL,EAAQM,OAAQJ,EAAKK,cAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGzC,EAAkBjE,KACrB,EAAGkE,EAAkBlE,KACrB,EAAGC,EAAkBD,KACrB,EAAGmE,EAAkBnE,MAEtB,CAACsG,EAAQM,OAAQ,CAChB,EAAG3C,EAAkBjE,KACrB,EAAGkE,EAAkBlE,KACrB,EAAGC,EAAkBD,KACrB,EAAGmE,EAAkBnE,WAOnB,MAAM+G,WAA+BC,EAC3C,WAAAC,CAAYC,EAAyB1C,GAC9B2C,MAAAD,EAAY1C,EAAQjH,GAC3B"}