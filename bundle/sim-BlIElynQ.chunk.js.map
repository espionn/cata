{"version":3,"file":"sim-BlIElynQ.chunk.js","sources":["../../../ui/shaman/restoration/presets.ts","../../../ui/shaman/restoration/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { Consumes, Flask, Food, Glyphs, Potions } from '../../core/proto/common.js';\nimport { RestorationShaman_Options as RestorationShamanOptions, ShamanMajorGlyph, ShamanMinorGlyph, ShamanShield } from '../../core/proto/shaman.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport P1Gear from './gear_sets/p1.gear.json';\nimport P2Gear from './gear_sets/p2.gear.json';\nimport P3Gear from './gear_sets/p3.gear.json';\nimport P4Gear from './gear_sets/p4.gear.json';\nimport PreraidGear from './gear_sets/preraid.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('PreRaid', PreraidGear);\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\nexport const TankHealingTalents = {\n\tname: 'Tank Healing',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-30205033-05005331335010501122331251',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: ShamanMajorGlyph.GlyphOfEarthlivingWeapon,\n\t\t// \tmajor2: ShamanMajorGlyph.GlyphOfEarthShield,\n\t\t// \tmajor3: ShamanMajorGlyph.GlyphOfLesserHealingWave,\n\t\t// \tminor2: ShamanMinorGlyph.GlyphOfWaterShield,\n\t\t// \tminor1: ShamanMinorGlyph.GlyphOfRenewedLife,\n\t\t// \tminor3: ShamanMinorGlyph.GlyphOfGhostWolf,\n\t\t// }),\n\t}),\n};\nexport const RaidHealingTalents = {\n\tname: 'Raid Healing',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-3020503-50005331335310501122331251',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: ShamanMajorGlyph.GlyphOfChainHeal,\n\t\t// \tmajor2: ShamanMajorGlyph.GlyphOfEarthShield,\n\t\t// \tmajor3: ShamanMajorGlyph.GlyphOfEarthlivingWeapon,\n\t\t// \tminor2: ShamanMinorGlyph.GlyphOfWaterShield,\n\t\t// \tminor1: ShamanMinorGlyph.GlyphOfRenewedLife,\n\t\t// \tminor3: ShamanMinorGlyph.GlyphOfGhostWolf,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultOptions = RestorationShamanOptions.create({\n\tclassOptions: {\n\t\tshield: ShamanShield.WaterShield,\n\t},\n\tearthShieldPPM: 0,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.RunicManaInjector,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n","import * as OtherInputs from '../../core/components/other_inputs.js';\nimport * as Mechanics from '../../core/constants/mechanics.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl.js';\nimport { Debuffs, Faction, IndividualBuffs, PartyBuffs, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport * as ShamanInputs from '../inputs.js';\nimport * as RestorationInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecRestorationShaman, {\n\tcssClass: 'restoration-shaman-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Shaman),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\twarnings: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMP5],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecRestorationShaman>) => {\n\t// \tlet stats = new Stats();\n\t// \tstats = stats.addStat(Stat.StatSpellCrit, player.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.22,\n\t\t\t[Stat.StatSpirit]: 0.05,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.67,\n\t\t\t[Stat.StatSpellHaste]: 1.29,\n\t\t\t[Stat.StatMP5]: 0.08,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.RaidHealingTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tvampiricTouch: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgement: true,\n\t\t\tcurseOfElements: true,\n\t\t\tshadowAndFlame: true,\n\t\t}),\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [ShamanInputs.ShamanShieldInput()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\t// RestorationInputs.TriggerEarthShield,\n\t\t\t// OtherInputs.TankAssignment\n\t\t],\n\t},\n\tcustomSections: [ShamanInputs.TotemsSection],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.RaidHealingTalents, Presets.TankHealingTalents],\n\t\trotations: [],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.PRERAID_PRESET, Presets.P1_PRESET, Presets.P2_PRESET, Presets.P3_PRESET, Presets.P4_PRESET],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecRestorationShaman>): APLRotation => {\n\t\treturn APLRotation.create();\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecRestorationShaman,\n\t\t\ttalents: Presets.RaidHealingTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class RestorationShamanSimUI extends IndividualSimUI<Spec.SpecRestorationShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRestorationShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","TankHealingTalents","name","data","SavedTalents","create","RaidHealingTalents","DefaultOptions","RestorationShamanOptions","classOptions","shield","ShamanShield","WaterShield","earthShieldPPM","DefaultConsumes","Consumes","defaultPotion","Potions","RunicManaInjector","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","SPEC_CONFIG","registerSpecConfig","Spec","SpecRestorationShaman","cssClass","cssScheme","PlayerClasses","getCssClass","Shaman","knownIssues","warnings","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.RaidHealingTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","vampiricTouch","debuffs","Debuffs","judgement","curseOfElements","shadowAndFlame","playerIconInputs","ShamanInputs.ShamanShieldInput","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","customSections","ShamanInputs.TotemsSection","encounterPicker","showExecuteProportion","presets","Presets.TankHealingTalents","rotations","Presets.PRERAID_PRESET","Presets.P2_PRESET","Presets.P3_PRESET","Presets.P4_PRESET","autoRotation","_player","APLRotation","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceDraenei","Horde","RaceOrc","defaultGear","RestorationShamanSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"40EAcaA,EAAiBC,EAA2B,gaAC5CC,EAAYD,EAA2B,YAAaE,GACpDC,EAAYH,EAA2B,YAAaI,GACpDC,EAAYL,EAA2B,YAAaM,GACpDC,EAAYP,EAA2B,YAAaQ,GAIpDC,EAAqB,CACjCC,KAAM,eACNC,KAAMC,EAAaC,OAAO,CAAA,IAYdC,EAAqB,CACjCJ,KAAM,eACNC,KAAMC,EAAaC,OAAO,CAAA,IAadE,EAAiBC,EAAyBH,OAAO,CAC7DI,aAAc,CACbC,OAAQC,EAAaC,aAEtBC,eAAgB,IAGJC,EAAkBC,EAASV,OAAO,CAC9CW,cAAeC,EAAQC,kBACvBC,MAAOC,EAAMC,oBACbC,KAAMC,EAAKC,gBCjDNC,EAAcC,EAAmBC,EAAKC,sBAAuB,CAClEC,SAAU,4BACVC,UAAWC,EAAcC,YAAYD,EAAcE,QAEnDC,YAAa,GACbC,SAAU,GAGVC,QAAS,CAACC,EAAKC,cAAeD,EAAKE,WAAYF,EAAKG,eAAgBH,EAAKI,cAAeJ,EAAKK,eAAgBL,EAAKM,SAElHC,gBAAiBP,EAAKG,eAEtBK,aAAc,CACbR,EAAKS,WACLT,EAAKU,SACLV,EAAKW,YACLX,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,cACLJ,EAAKK,eACLL,EAAKM,SAUNM,SAAU,CAETC,KAAMC,EAAkBD,KAExBE,UAAWC,EAAMC,QAAQ,CACxB,CAACjB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,eAAgB,IACtB,CAACJ,EAAKK,gBAAiB,KACvB,CAACL,EAAKM,SAAU,MAGjBY,SAAUC,EAEVC,QAASC,EAA2BvD,KAEpCwD,YAAaC,EAEbC,UAAWC,EAAUzD,OAAO,CAC3B0D,kBAAkB,EAClBC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,oBAAoB,EACpBC,sBAAsB,EACtBC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,EACbC,iBAAiB,EACjBC,iBAAiB,EACjBC,WAAW,IAEZC,WAAYC,EAAWzE,OAAO,IAC9B0E,gBAAiBC,EAAgB3E,OAAO,CACvC4E,eAAe,IAEhBC,QAASC,EAAQ9E,OAAO,CACvB+E,WAAW,EACXC,iBAAiB,EACjBC,gBAAgB,KAIlBC,iBAAkB,CAACC,KAEnBC,wBAAyB,GACzBC,wBAAyB,GAEzBC,YAAa,CACZC,OAAQ,IAKTC,eAAgB,CAACC,GACjBC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERxC,QAAS,CAACC,EAA4BwC,GACtCC,UAAW,GAEXjD,KAAM,CAACkD,EAAwBjD,EAAmBkD,EAAmBC,EAAmBC,IAGzFC,aAAeC,GACPC,EAAYrG,SAGpBsG,eAAgB,CACf,CACCC,KAAMjF,EAAKC,sBACX6B,QAASC,EAA2BvD,KACpCwD,YAAaC,EACbL,SAAUC,EACVqD,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,YACzB,CAACL,EAAQM,OAAQJ,EAAKK,SAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAG/D,EAAkBD,KACrB,EAAGmD,EAAkBnD,KACrB,EAAGoD,EAAkBpD,KACrB,EAAGqD,EAAkBrD,MAEtB,CAAC4D,EAAQM,OAAQ,CAChB,EAAGjE,EAAkBD,KACrB,EAAGmD,EAAkBnD,KACrB,EAAGoD,EAAkBpD,KACrB,EAAGqD,EAAkBrD,WAOnB,MAAMqE,UAA+BC,EAC3C,WAAAC,CAAYC,EAAyBC,GAC9BC,MAAAF,EAAYC,EAAQlG,EAC3B"}