{"version":3,"file":"sim-C6q9Dai4.chunk.js","sources":["../../../ui/warrior/protection/presets.ts","../../../ui/warrior/protection/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { BattleElixir, Consumes, Explosive, Food, Glyphs, GuardianElixir, Potions, Spec } from '../../core/proto/common.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport {\n\tProtectionWarrior_Options as ProtectionWarriorOptions,\n\tProtectionWarrior_Rotation as ProtectionWarriorRotation,\n\tWarriorMajorGlyph,\n\tWarriorMinorGlyph,\n\tWarriorShout,\n} from '../../core/proto/warrior.js';\nimport DefaultApl from './apls/default.apl.json';\nimport P1BalancedGear from './gear_sets/p1_balanced.gear.json';\nimport P2SurvivalGear from './gear_sets/p2_survival.gear.json';\nimport P3Gear from './gear_sets/p3.gear.json';\nimport P4Gear from './gear_sets/p4.gear.json';\nimport PreraidP4Gear from './gear_sets/p4_preraid.gear.json';\nimport PreraidBalancedGear from './gear_sets/preraid_balanced.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_BALANCED_PRESET = PresetUtils.makePresetGear('P1 PreRaid Preset', PreraidBalancedGear);\nexport const P4_PRERAID_PRESET = PresetUtils.makePresetGear('P4 PreRaid Preset', PreraidP4Gear);\nexport const P1_BALANCED_PRESET = PresetUtils.makePresetGear('P1 Preset', P1BalancedGear);\nexport const P2_SURVIVAL_PRESET = PresetUtils.makePresetGear('P2 Preset', P2SurvivalGear);\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\nexport const ROTATION_DEFAULT = PresetUtils.makePresetAPLRotation('Default APL', DefaultApl);\nexport const ROTATION_PRESET_SIMPLE = PresetUtils.makePresetSimpleRotation('Simple Cooldowns', Spec.SpecProtectionWarrior, ProtectionWarriorRotation.create());\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '2500030023-302-053351225000012521030113321',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: WarriorMajorGlyph.GlyphOfBlocking,\n\t\t// \tmajor2: WarriorMajorGlyph.GlyphOfVigilance,\n\t\t// \tmajor3: WarriorMajorGlyph.GlyphOfDevastate,\n\t\t// \tminor1: WarriorMinorGlyph.GlyphOfCharge,\n\t\t// \tminor2: WarriorMinorGlyph.GlyphOfThunderClap,\n\t\t// \tminor3: WarriorMinorGlyph.GlyphOfCommand,\n\t\t// }),\n\t}),\n};\n\nexport const UATalents = {\n\tname: 'UA',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '35023301230051002020120002-2-05035122500000252',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: WarriorMajorGlyph.GlyphOfRevenge,\n\t\t// \tmajor2: WarriorMajorGlyph.GlyphOfHeroicStrike,\n\t\t// \tmajor3: WarriorMajorGlyph.GlyphOfSweepingStrikes,\n\t\t// \tminor1: WarriorMinorGlyph.GlyphOfCharge,\n\t\t// \tminor2: WarriorMinorGlyph.GlyphOfThunderClap,\n\t\t// \tminor3: WarriorMinorGlyph.GlyphOfCommand,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultOptions = ProtectionWarriorOptions.create({\n\tclassOptions: {\n\t\tshout: WarriorShout.WarriorShoutCommanding,\n\t\tuseShatteringThrow: false,\n\t\tstartingRage: 0,\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tbattleElixir: BattleElixir.ElixirOfExpertise,\n\tguardianElixir: GuardianElixir.ElixirOfProtection,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.EarthenPotion,\n\tprepopPotion: Potions.EarthenPotion,\n\tthermalSapper: true,\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\n});\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../../core/components/other_inputs.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLAction, APLListItem, APLPrepullAction, APLRotation } from '../../core/proto/apl.js';\nimport { Cooldowns, Debuffs, Faction, IndividualBuffs, PartyBuffs, PseudoStat, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common.js';\nimport { ProtectionWarrior_Rotation as ProtectionWarriorRotation } from '../../core/proto/warrior.js';\nimport * as AplUtils from '../../core/proto_utils/apl_utils.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport * as ProtectionWarriorInputs from '../inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecProtectionWarrior, {\n\tcssClass: 'protection-warrior-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Warrior),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P3_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatArmor]: 0.174,\n\t\t\t\t[Stat.StatBonusArmor]: 0.155,\n\t\t\t\t[Stat.StatStamina]: 2.336,\n\t\t\t\t[Stat.StatStrength]: 1.555,\n\t\t\t\t[Stat.StatAgility]: 2.771,\n\t\t\t\t[Stat.StatAttackPower]: 0.32,\n\t\t\t\t[Stat.StatExpertise]: 1.44,\n\t\t\t\t[Stat.StatMeleeHit]: 1.432,\n\t\t\t\t[Stat.StatMeleeCrit]: 0.925,\n\t\t\t\t[Stat.StatMeleeHaste]: 0.431,\n\t\t\t\t[Stat.StatArmorPenetration]: 1.055,\n\t\t\t\t[Stat.StatBlock]: 1.32,\n\t\t\t\t[Stat.StatBlockValue]: 1.373,\n\t\t\t\t[Stat.StatDodge]: 2.606,\n\t\t\t\t[Stat.StatParry]: 2.649,\n\t\t\t\t[Stat.StatDefense]: 3.305,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 6.081,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tsunderArmor: true,\n\t\t\tmangle: true,\n\t\t\tvindication: true,\n\t\t\tbloodFrenzy: true,\n\t\t\tjudgement: true,\n\t\t\tfrostFever: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [ProtectionWarriorInputs.ShoutPicker(), ProtectionWarriorInputs.ShatteringThrow()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [BuffDebuffInputs.StaminaBuff],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tProtectionWarriorInputs.StartingRage(),\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.StandardTalents, Presets.UATalents],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_DEFAULT, Presets.ROTATION_PRESET_SIMPLE],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_BALANCED_PRESET,\n\t\t\tPresets.P4_PRERAID_PRESET,\n\t\t\tPresets.P1_BALANCED_PRESET,\n\t\t\tPresets.P2_SURVIVAL_PRESET,\n\t\t\tPresets.P3_PRESET,\n\t\t\tPresets.P4_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecProtectionWarrior>): APLRotation => {\n\t\treturn Presets.ROTATION_DEFAULT.rotation.rotation!;\n\t},\n\n\tsimpleRotation: (player: Player<Spec.SpecProtectionWarrior>, simple: ProtectionWarriorRotation, cooldowns: Cooldowns): APLRotation => {\n\t\tconst [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t\tconst preShout = APLPrepullAction.fromJsonString(`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47440}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}}`);\n\n\t\tconst heroicStrike = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRage\":{}},\"rhs\":{\"const\":{\"val\":\"30\"}}}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":47450}}}`,\n\t\t);\n\t\tconst shieldSlam = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":47488}}}`);\n\t\tconst revenge = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":57823}}}`);\n\t\tconst refreshShout = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"auraShouldRefresh\":{\"sourceUnit\":{\"type\":\"Self\"},\"auraId\":{\"spellId\":47440},\"maxOverlap\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":47440}}}`,\n\t\t);\n\t\tconst refreshTclap = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":47502},\"maxOverlap\":{\"const\":{\"val\":\"2s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":47502}}}`,\n\t\t);\n\t\tconst refreshDemo = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":47437},\"maxOverlap\":{\"const\":{\"val\":\"2s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":25203}}}`,\n\t\t);\n\t\tconst devastate = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":47498}}}`);\n\n\t\tprepullActions.push(preShout);\n\n\t\tactions.push(...([heroicStrike, shieldSlam, revenge, refreshShout, refreshTclap, refreshDemo, devastate].filter(a => a) as Array<APLAction>));\n\n\t\treturn APLRotation.create({\n\t\t\tprepullActions: prepullActions,\n\t\t\tpriorityList: actions.map(action =>\n\t\t\t\tAPLListItem.create({\n\t\t\t\t\taction: action,\n\t\t\t\t}),\n\t\t\t),\n\t\t});\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecProtectionWarrior,\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_BALANCED_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_SURVIVAL_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_BALANCED_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_SURVIVAL_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ProtectionWarriorSimUI extends IndividualSimUI<Spec.SpecProtectionWarrior> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecProtectionWarrior>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_BALANCED_PRESET","PresetUtils.makePresetGear","P4_PRERAID_PRESET","PreraidP4Gear","P1_BALANCED_PRESET","P1BalancedGear","P2_SURVIVAL_PRESET","P2SurvivalGear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","ROTATION_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","ROTATION_PRESET_SIMPLE","PresetUtils.makePresetSimpleRotation","Spec","SpecProtectionWarrior","ProtectionWarriorRotation","create","StandardTalents","name","data","SavedTalents","UATalents","DefaultOptions","ProtectionWarriorOptions","classOptions","shout","WarriorShout","WarriorShoutCommanding","useShatteringThrow","startingRage","DefaultConsumes","Consumes","battleElixir","BattleElixir","ElixirOfExpertise","guardianElixir","GuardianElixir","ElixirOfProtection","food","Food","FoodDragonfinFilet","defaultPotion","Potions","EarthenPotion","prepopPotion","thermalSapper","fillerExplosive","Explosive","ExplosiveSaroniteBomb","SPEC_CONFIG","registerSpecConfig","cssClass","cssScheme","PlayerClasses","getCssClass","Warrior","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmor","StatBonusArmor","StatArmorPenetration","StatDefense","StatBlock","StatBlockValue","StatDodge","StatParry","StatResilience","StatNatureResistance","StatShadowResistance","StatFrostResistance","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","defaults","gear","Presets.P3_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","debuffs","Debuffs","sunderArmor","mangle","vindication","bloodFrenzy","judgement","frostFever","playerIconInputs","ProtectionWarriorInputs.ShoutPicker","ProtectionWarriorInputs.ShatteringThrow","includeBuffDebuffInputs","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","ProtectionWarriorInputs.StartingRage","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.UATalents","rotations","Presets.ROTATION_DEFAULT","Presets.ROTATION_PRESET_SIMPLE","Presets.PRERAID_BALANCED_PRESET","Presets.P4_PRERAID_PRESET","Presets.P1_BALANCED_PRESET","Presets.P2_SURVIVAL_PRESET","Presets.P4_PRESET","autoRotation","_player","rotation","simpleRotation","player","simple","cooldowns","prepullActions","actions","AplUtils.standardCooldownDefaults","preShout","APLPrepullAction","fromJsonString","heroicStrike","APLAction","shieldSlam","revenge","refreshShout","refreshTclap","refreshDemo","devastate","push","filter","a","APLRotation","priorityList","map","action","APLListItem","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceOrc","defaultGear","ProtectionWarriorSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}