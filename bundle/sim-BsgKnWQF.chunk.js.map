{"version":3,"file":"sim-BsgKnWQF.chunk.js","sources":["../../../ui/death_knight/frost/presets.ts","../../../ui/death_knight/frost/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils';\nimport { Consumes, Explosive, Flask, Food, Glyphs, PetFood, Potions } from '../../core/proto/common';\nimport { DeathKnightMajorGlyph, DeathKnightMinorGlyph, DeathKnightPrimeGlyph, FrostDeathKnight_Options } from '../../core/proto/death_knight';\nimport { SavedTalents } from '../../core/proto/ui';\nimport SingleTargetAPL from '../../death_knight/frost/apls/st.apl.json'\nimport P1Gear from '../../death_knight/frost/gear_sets/p1.gear.json'\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const P1_GEAR_PRESET = PresetUtils.makePresetGear('P1', P1Gear);\n\nexport const SINGLE_TARGET_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Single Target', SingleTargetAPL);\nexport const AOE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('AoE', SingleTargetAPL);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wotlk.wowhead.com/talent-calc and copy the numbers in the url.\n\nexport const SingleTargetTalents = {\n\tname: 'Single Target',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '2032-20330022233112012301-003',\n\t\tglyphs: Glyphs.create({\n\t\t\tprime1: DeathKnightPrimeGlyph.GlyphOfFrostStrike,\n\t\t\tprime2: DeathKnightPrimeGlyph.GlyphOfObliterate,\n\t\t\tprime3: DeathKnightPrimeGlyph.GlyphOfHowlingBlast,\n\t\t\tmajor1: DeathKnightMajorGlyph.GlyphOfPestilence,\n\t\t\tmajor2: DeathKnightMajorGlyph.GlyphOfBloodBoil,\n\t\t\tmajor3: DeathKnightMajorGlyph.GlyphOfDarkSuccor,\n\t\t\tminor1: DeathKnightMinorGlyph.GlyphOfDeathGate,\n\t\t\tminor2: DeathKnightMinorGlyph.GlyphOfPathOfFrost,\n\t\t\tminor3: DeathKnightMinorGlyph.GlyphOfHornOfWinter,\n\t\t}),\n\t}),\n};\n\nexport const AoeTalents = {\n\tname: 'AOE',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-320050500002-2302303050032052000150013133151',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DeathKnightMajorGlyph.GlyphOfTheGhoul,\n\t\t// \tmajor2: DeathKnightMajorGlyph.GlyphOfIcyTouch,\n\t\t// \tmajor3: DeathKnightMajorGlyph.GlyphOfDeathAndDecay,\n\t\t// \tminor1: DeathKnightMinorGlyph.GlyphOfHornOfWinter,\n\t\t// \tminor2: DeathKnightMinorGlyph.GlyphOfPestilence,\n\t\t// \tminor3: DeathKnightMinorGlyph.GlyphOfRaiseDead,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultOptions = FrostDeathKnight_Options.create({\n\tclassOptions: {\n\t\tstartingRunicPower: 0,\n\t\tpetUptime: 1,\n\t},\n});\n\nexport const OtherDefaults = {};\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTitanicStrength,\n\tfood: Food.FoodBeerBasedCrocolisk,\n\tdefaultPotion: Potions.GolembloodPotion,\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\n\tprepopPotion: Potions.GolembloodPotion,\n\tthermalSapper: true,\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\n});\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs';\nimport * as OtherInputs from '../../core/components/other_inputs';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl';\nimport { Debuffs, Faction, IndividualBuffs, ItemSlot, PartyBuffs, PseudoStat, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as DeathKnightInputs from '../inputs';\nimport * as FrostInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecFrostDeathKnight, {\n\tcssClass: 'frost-death-knight-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.DeathKnight),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStrength,\n\t\tStat.StatArmor,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatMastery,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatArmorPenetration,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps, PseudoStat.PseudoStatOffHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatStrength,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatMastery,\n\t\tStat.StatExpertise,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_GEAR_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatStrength]: 3.22,\n\t\t\t\t[Stat.StatArmor]: 0.01,\n\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t[Stat.StatExpertise]: 1.13,\n\t\t\t\t[Stat.StatMeleeHaste]: 1.85,\n\t\t\t\t[Stat.StatMeleeHit]: 1.92,\n\t\t\t\t[Stat.StatMeleeCrit]: 0.76,\n\t\t\t\t[Stat.StatArmorPenetration]: 0.77,\n\t\t\t\t[Stat.StatSpellHit]: 0.8,\n\t\t\t\t[Stat.StatSpellCrit]: 0.34,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.1,\n\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 1.79,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.SingleTargetTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tdevotionAura: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\thornOfWinter: true,\n\t\t\tabominationsMight: true,\n\t\t\tarcaneTactics: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\theroicPresence: false,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tsunderArmor: true,\n\t\t\tbrittleBones: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tshadowAndFlame: true\n\t\t}),\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecFrostDeathKnight>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets > 1) {\n\t\t\treturn Presets.AOE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.SINGLE_TARGET_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t}\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\tpetConsumeInputs: [],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.SpellDamageDebuff\n\t],\n\texcludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.DamageReduction,\n\t\tBuffDebuffInputs.MeleeAttackSpeedDebuff,\n\t\tBuffDebuffInputs.BleedDebuff\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\t// DeathKnightInputs.StartingRunicPower(),\n\t\t\t// DeathKnightInputs.PetUptime(),\n\t\t\t// FrostInputs.UseAMSInput,\n\t\t\t// FrostInputs.AvgAMSSuccessRateInput,\n\t\t\t// FrostInputs.AvgAMSHitInput,\n\t\t\t// OtherInputs.TankAssignment,\n\t\t\t// OtherInputs.InFrontOfTarget,\n\t\t\tOtherInputs.DarkIntentUptime\n\t\t],\n\t},\n\titemSwapSlots: [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand],\n\tencounterPicker: {\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\ttalents: [\n\t\t\tPresets.SingleTargetTalents,\n\t\t\t//Presets.AoeTalents,\n\t\t],\n\t\trotations: [\n\t\t\tPresets.SINGLE_TARGET_ROTATION_PRESET_DEFAULT,\n\t\t\t//Presets.AOE_ROTATION_PRESET_DEFAULT,\n\t\t],\n\t\tgear: [\n\t\t\tPresets.P1_GEAR_PRESET,\n\t\t],\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecFrostDeathKnight,\n\t\t\ttalents: Presets.SingleTargetTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t\t2: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t\t3: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t\t4: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t\t2: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t\t3: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t\t4: Presets.P1_GEAR_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t},\n\t],\n});\n\nexport class FrostDeathKnightSimUI extends IndividualSimUI<Spec.SpecFrostDeathKnight> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecFrostDeathKnight>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["P1_GEAR_PRESET","PresetUtils.makePresetGear","SINGLE_TARGET_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","SingleTargetAPL","AOE_ROTATION_PRESET_DEFAULT","SingleTargetTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","prime1","DeathKnightPrimeGlyph","GlyphOfFrostStrike","prime2","GlyphOfObliterate","prime3","GlyphOfHowlingBlast","major1","DeathKnightMajorGlyph","GlyphOfPestilence","major2","GlyphOfBloodBoil","major3","GlyphOfDarkSuccor","minor1","DeathKnightMinorGlyph","GlyphOfDeathGate","minor2","GlyphOfPathOfFrost","minor3","GlyphOfHornOfWinter","DefaultOptions","FrostDeathKnight_Options","classOptions","startingRunicPower","petUptime","DefaultConsumes","Consumes","flask","Flask","FlaskOfTitanicStrength","food","Food","FoodBeerBasedCrocolisk","defaultPotion","Potions","GolembloodPotion","petFood","PetFood","PetFoodSpicedMammothTreats","prepopPotion","thermalSapper","fillerExplosive","Explosive","ExplosiveSaroniteBomb","SPEC_CONFIG","registerSpecConfig","Spec","SpecFrostDeathKnight","cssClass","cssScheme","PlayerClasses","getCssClass","DeathKnight","knownIssues","epStats","Stat","StatStrength","StatArmor","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatMastery","StatSpellHit","StatSpellCrit","StatArmorPenetration","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","defaults","gear","Presets.P1_GEAR_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.SingleTargetTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","devotionAura","bloodlust","markOfTheWild","icyTalons","leaderOfThePack","powerWordFortitude","hornOfWinter","abominationsMight","arcaneTactics","partyBuffs","PartyBuffs","heroicPresence","individualBuffs","IndividualBuffs","debuffs","Debuffs","sunderArmor","brittleBones","ebonPlaguebringer","shadowAndFlame","autoRotation","player","sim","encounter","targets","length","Presets.AOE_ROTATION_PRESET_DEFAULT","rotation","Presets.SINGLE_TARGET_ROTATION_PRESET_DEFAULT","playerIconInputs","petConsumeInputs","includeBuffDebuffInputs","BuffDebuffInputs.SpellDamageDebuff","excludeBuffDebuffInputs","BuffDebuffInputs.DamageReduction","BuffDebuffInputs.MeleeAttackSpeedDebuff","BuffDebuffInputs.BleedDebuff","otherInputs","inputs","OtherInputs.DarkIntentUptime","itemSwapSlots","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","encounterPicker","showExecuteProportion","presets","rotations","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceTroll","defaultGear","otherDefaults","FrostDeathKnightSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}