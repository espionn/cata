{"version":3,"file":"sim-BfVX2wFT.chunk.js","sources":["../../../ui/mage/fire/inputs.ts","../../../ui/mage/fire/presets.ts","../../../ui/mage/fire/sim.ts"],"sourcesContent":["import * as InputHelpers from '../../core/components/input_helpers';\nimport { Player } from '../../core/player';\nimport { Spec } from '../../core/proto/common';\nimport { FireMage_Rotation_PrimaryFireSpell as PrimaryFireSpell } from '../../core/proto/mage';\nimport { TypedEvent } from '../../core/typed_event';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const MageRotationConfig = {\n\tinputs: [\n\t\t// ********************************************************\n\t\t//                       FIRE INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecFireMage, PrimaryFireSpell>({\n\t\t\tfieldName: 'primaryFireSpell',\n\t\t\tlabel: 'Primary Spell',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Fireball', value: PrimaryFireSpell.Fireball },\n\t\t\t\t{ name: 'Frostfire Bolt', value: PrimaryFireSpell.FrostfireBolt },\n\t\t\t\t{ name: 'Scorch', value: PrimaryFireSpell.Scorch },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecFireMage>) => player.getTalentTree() == 1,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecFireMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecFireMage>({\n\t\t\tfieldName: 'maintainImprovedScorch',\n\t\t\tlabel: 'Maintain Imp. Scorch',\n\t\t\tlabelTooltip: 'Always use Scorch when below 5 stacks, or < 4s remaining on debuff.',\n\t\t\tshowWhen: (player: Player<Spec.SpecFireMage>) => player.getTalents().improvedScorch > 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecFireMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t],\n};\n","import * as PresetUtils from '../../core/preset_utils';\nimport { Conjured, Consumes, Faction, Flask, Food, Glyphs, Potions, Profession, Spec } from '../../core/proto/common';\nimport {\n\tFireMage_Options as MageOptions,\n\tFireMage_Rotation as MageRotation,\n\tFireMage_Rotation_PrimaryFireSpell as PrimaryFireSpell,\n\tMageMajorGlyph,\n\tMageMinorGlyph,\n\tMageOptions_ArmorType as ArmorType,\n} from '../../core/proto/mage';\nimport { SavedTalents } from '../../core/proto/ui';\nimport FireApl from './apls/fire.apl.json';\nimport FireAoeApl from './apls/fire_aoe.apl.json';\nimport P1FireGear from './gear_sets/p1_fire.gear.json';\nimport P2FireGear from './gear_sets/p2_fire.gear.json';\nimport P3FireAllianceGear from './gear_sets/p3_fire_alliance.gear.json';\nimport P3FireHordeGear from './gear_sets/p3_fire_horde.gear.json';\nimport P4FireAllianceGear from './gear_sets/p4_fire_alliance.gear.json';\nimport P4FireHordeGear from './gear_sets/p4_fire_horde.gear.json';\nimport PreraidFireGear from './gear_sets/preraid_fire.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const FIRE_PRERAID_PRESET = PresetUtils.makePresetGear('Fire Preraid Preset', PreraidFireGear, { talentTree: 1 });\nexport const FIRE_P1_PRESET = PresetUtils.makePresetGear('Fire P1 Preset', P1FireGear, { talentTree: 1 });\nexport const FIRE_P2_PRESET = PresetUtils.makePresetGear('Fire P2 Preset', P2FireGear, {\n\ttalentTree: 1,\n});\nexport const FIRE_P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('Fire P3 Preset [A]', P3FireAllianceGear, {\n\ttalentTree: 1,\n\tfaction: Faction.Alliance,\n});\nexport const FIRE_P3_PRESET_HORDE = PresetUtils.makePresetGear('Fire P3 Preset [H]', P3FireHordeGear, {\n\ttalentTree: 1,\n\tfaction: Faction.Horde,\n});\nexport const FIRE_P4_PRESET_ALLIANCE = PresetUtils.makePresetGear('Fire P4 Preset [A]', P4FireAllianceGear, {\n\ttalentTree: 1,\n\tfaction: Faction.Alliance,\n});\nexport const FIRE_P4_PRESET_HORDE = PresetUtils.makePresetGear('Fire P4 Preset [H]', P4FireHordeGear, {\n\ttalentTree: 1,\n\tfaction: Faction.Horde,\n});\n\nexport const DefaultSimpleRotation = MageRotation.create({\n\tprimaryFireSpell: PrimaryFireSpell.Fireball,\n\tmaintainImprovedScorch: false,\n});\n\nexport const ROTATION_PRESET_SIMPLE = PresetUtils.makePresetSimpleRotation('Simple Default', Spec.SpecFireMage, DefaultSimpleRotation);\nexport const FIRE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Fire', FireApl, { talentTree: 1 });\nexport const FIRE_ROTATION_PRESET_AOE = PresetUtils.makePresetAPLRotation('Fire AOE', FireAoeApl, { talentTree: 1 });\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const FireTalents = {\n\tname: 'Fire',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '23000503110003-0055030012303331053120301351',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: MageMajorGlyph.GlyphOfFireball,\n\t\t// \tmajor2: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t// \tmajor3: MageMajorGlyph.GlyphOfLivingBomb,\n\t\t// \tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t// \tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t// \tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultFireOptions = MageOptions.create({\n\tclassOptions: {\n\t\tarmor: ArmorType.MoltenArmor,\n\t},\n});\n\nexport const DefaultFireConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFirecrackerSalmon,\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredFlameCap,\n\tprepopPotion: Potions.PotionOfSpeed,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import * as OtherInputs from '../../core/components/other_inputs';\nimport * as Mechanics from '../../core/constants/mechanics';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLAction, APLListItem, APLPrepullAction, APLRotation } from '../../core/proto/apl';\nimport { Cooldowns, Debuffs, Faction, IndividualBuffs, PartyBuffs, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common';\nimport { FireMage_Rotation, FireMage_Rotation_PrimaryFireSpell } from '../../core/proto/mage';\nimport * as AplUtils from '../../core/proto_utils/apl_utils';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as MageInputs from '../inputs';\nimport * as FireInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecFireMage, {\n\tcssClass: 'fire-mage-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Mage),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellHit, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMP5],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecFireMage>) => {\n\t// \tlet stats = new Stats();\n\n\t// \tif (player.getTalentTree() === 0) {\n\t// \t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().arcaneFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t// \t}\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.FIRE_P3_PRESET_HORDE.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.48,\n\t\t\t[Stat.StatSpirit]: 0.42,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.38,\n\t\t\t[Stat.StatSpellCrit]: 0.58,\n\t\t\t[Stat.StatSpellHaste]: 0.94,\n\t\t\t[Stat.StatMP5]: 0.09,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultFireConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.FireTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultFireOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\tmanaTideTotems: 1,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tinnervateCount: 0,\n\t\t\tvampiricTouch: true,\n\t\t\tfocusMagic: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgement: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tshadowAndFlame: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [MageInputs.ArmorInput()],\n\t// Inputs to include in the 'Rotation' section on the settings tab.\n\trotationInputs: FireInputs.MageRotationConfig,\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\t//Should add hymn of hope, revitalize, and\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.ReactionTime, OtherInputs.DistanceFromTarget, OtherInputs.TankAssignment, OtherInputs.DarkIntentUptime,],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: true,\n\t},\n\n\tpresets: {\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_PRESET_SIMPLE, Presets.FIRE_ROTATION_PRESET_DEFAULT, Presets.FIRE_ROTATION_PRESET_AOE],\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.FireTalents],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.FIRE_PRERAID_PRESET,\n\t\t\tPresets.FIRE_P1_PRESET,\n\t\t\tPresets.FIRE_P2_PRESET,\n\t\t\tPresets.FIRE_P3_PRESET_ALLIANCE,\n\t\t\tPresets.FIRE_P3_PRESET_HORDE,\n\t\t\tPresets.FIRE_P4_PRESET_HORDE,\n\t\t\tPresets.FIRE_P4_PRESET_ALLIANCE,\n\t\t],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecFireMage>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets > 3) {\n\t\t\treturn Presets.FIRE_ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.FIRE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t}\n\t},\n\n\tsimpleRotation: (player: Player<Spec.SpecFireMage>, simple: FireMage_Rotation, cooldowns: Cooldowns): APLRotation => {\n\t\tconst [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t\tconst prepullMirrorImage = APLPrepullAction.fromJsonString(\n\t\t\t`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":55342}}},\"doAtValue\":{\"const\":{\"val\":\"-2s\"}}}`,\n\t\t);\n\t\tconst berserking = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}`,\n\t\t);\n\t\tconst hyperspeedAcceleration = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}`,\n\t\t);\n\t\tconst combatPot = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}}`,\n\t\t);\n\t\tconst evocation = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"25%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":12051}}}`,\n\t\t);\n\n\t\tconst maintainImpScorch = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":12873},\"maxOverlap\":{\"const\":{\"val\":\"4s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42859}}}`,\n\t\t);\n\t\tconst pyroWithHotStreak = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44448}}},\"castSpell\":{\"spellId\":{\"spellId\":42891}}}`,\n\t\t);\n\t\tconst livingBomb = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"12s\"}}}}]}},\"multidot\":{\"spellId\":{\"spellId\":55360},\"maxDots\":10,\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}}`,\n\t\t);\n\t\tconst cheekyFireBlastFinisher = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"spellCastTime\":{\"spellId\":{\"spellId\":42859}}}}},\"castSpell\":{\"spellId\":{\"spellId\":42873}}}`,\n\t\t);\n\t\tconst scorchFinisher = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"4s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42859}}}`,\n\t\t);\n\t\tconst fireball = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42833}}}`);\n\t\tconst frostfireBolt = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":47610}}}`);\n\t\tconst scorch = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42859}}}`);\n\n\t\tprepullActions.push(prepullMirrorImage);\n\t\tif (player.getTalents().improvedScorch > 0 && simple.maintainImprovedScorch) {\n\t\t\tactions.push(maintainImpScorch);\n\t\t}\n\n\t\tactions.push(\n\t\t\t...([\n\t\t\t\tberserking,\n\t\t\t\thyperspeedAcceleration,\n\t\t\t\tcombatPot,\n\t\t\t\tpyroWithHotStreak,\n\t\t\t\tlivingBomb,\n\t\t\t\tcheekyFireBlastFinisher,\n\t\t\t\tscorchFinisher,\n\t\t\t\tevocation,\n\t\t\t\tsimple.primaryFireSpell == FireMage_Rotation_PrimaryFireSpell.Fireball\n\t\t\t\t\t? fireball\n\t\t\t\t\t: simple.primaryFireSpell == FireMage_Rotation_PrimaryFireSpell.FrostfireBolt\n\t\t\t\t\t? frostfireBolt\n\t\t\t\t\t: scorch,\n\t\t\t].filter(a => a) as Array<APLAction>),\n\t\t);\n\n\t\treturn APLRotation.create({\n\t\t\tprepullActions: prepullActions,\n\t\t\tpriorityList: actions.map(action =>\n\t\t\t\tAPLListItem.create({\n\t\t\t\t\taction: action,\n\t\t\t\t}),\n\t\t\t),\n\t\t});\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecFireMage,\n\t\t\ttalents: Presets.FireTalents.data,\n\t\t\tspecOptions: Presets.DefaultFireOptions,\n\t\t\tconsumes: Presets.DefaultFireConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.FIRE_P1_PRESET.gear,\n\t\t\t\t\t2: Presets.FIRE_P2_PRESET.gear,\n\t\t\t\t\t3: Presets.FIRE_P3_PRESET_ALLIANCE.gear,\n\t\t\t\t\t4: Presets.FIRE_P4_PRESET_ALLIANCE.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.FIRE_P1_PRESET.gear,\n\t\t\t\t\t2: Presets.FIRE_P2_PRESET.gear,\n\t\t\t\t\t3: Presets.FIRE_P3_PRESET_HORDE.gear,\n\t\t\t\t\t4: Presets.FIRE_P4_PRESET_HORDE.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class FireMageSimUI extends IndividualSimUI<Spec.SpecFireMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecFireMage>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["MageRotationConfig","inputs","InputHelpers.makeRotationEnumInput","fieldName","label","values","name","value","PrimaryFireSpell","Fireball","FrostfireBolt","Scorch","showWhen","player","getTalentTree","changeEmitter","TypedEvent","onAny","rotationChangeEmitter","talentsChangeEmitter","InputHelpers.makeRotationBooleanInput","labelTooltip","getTalents","improvedScorch","FIRE_PRERAID_PRESET","PresetUtils.makePresetGear","talentTree","FIRE_P1_PRESET","P1FireGear","FIRE_P2_PRESET","P2FireGear","FIRE_P3_PRESET_ALLIANCE","P3FireAllianceGear","faction","Faction","Alliance","FIRE_P3_PRESET_HORDE","P3FireHordeGear","Horde","FIRE_P4_PRESET_ALLIANCE","P4FireAllianceGear","FIRE_P4_PRESET_HORDE","P4FireHordeGear","DefaultSimpleRotation","MageRotation","create","primaryFireSpell","maintainImprovedScorch","ROTATION_PRESET_SIMPLE","PresetUtils.makePresetSimpleRotation","Spec","SpecFireMage","FIRE_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","FireApl","FIRE_ROTATION_PRESET_AOE","FireAoeApl","FireTalents","data","SavedTalents","DefaultFireOptions","MageOptions","classOptions","armor","ArmorType","MoltenArmor","DefaultFireConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFirecrackerSalmon","defaultPotion","Potions","PotionOfSpeed","defaultConjured","Conjured","ConjuredFlameCap","prepopPotion","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","cssClass","cssScheme","PlayerClasses","getCssClass","Mage","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.FIRE_P3_PRESET_HORDE","epWeights","Stats","fromMap","consumes","Presets.DefaultFireConsumes","talents","Presets.FireTalents","specOptions","Presets.DefaultFireOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","manaTideTotems","individualBuffs","IndividualBuffs","innervateCount","vampiricTouch","focusMagic","debuffs","Debuffs","judgement","ebonPlaguebringer","shadowAndFlame","playerIconInputs","MageInputs.ArmorInput","rotationInputs","FireInputs.MageRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.ReactionTime","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","OtherInputs.DarkIntentUptime","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_SIMPLE","Presets.FIRE_ROTATION_PRESET_DEFAULT","Presets.FIRE_ROTATION_PRESET_AOE","Presets.FIRE_PRERAID_PRESET","Presets.FIRE_P1_PRESET","Presets.FIRE_P2_PRESET","Presets.FIRE_P3_PRESET_ALLIANCE","Presets.FIRE_P4_PRESET_HORDE","Presets.FIRE_P4_PRESET_ALLIANCE","autoRotation","sim","encounter","targets","length","rotation","simpleRotation","simple","cooldowns","prepullActions","actions","AplUtils.standardCooldownDefaults","prepullMirrorImage","APLPrepullAction","fromJsonString","berserking","APLAction","hyperspeedAcceleration","combatPot","evocation","maintainImpScorch","pyroWithHotStreak","livingBomb","cheekyFireBlastFinisher","scorchFinisher","fireball","frostfireBolt","scorch","push","FireMage_Rotation_PrimaryFireSpell","filter","a","APLRotation","priorityList","map","action","APLListItem","raidSimPresets","spec","otherDefaults","defaultFactionRaces","Unknown","Race","RaceUnknown","RaceGnome","RaceTroll","defaultGear","FireMageSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}