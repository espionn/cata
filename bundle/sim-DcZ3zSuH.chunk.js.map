{"version":3,"file":"sim-DcZ3zSuH.chunk.js","sources":["../../../ui/druid/balance/inputs.ts","../../../ui/druid/balance/presets.ts","../../../ui/druid/balance/sim.ts"],"sourcesContent":["import * as InputHelpers from '../../core/components/input_helpers.js';\nimport { Spec } from '../../core/proto/common.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const OkfUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecBalanceDruid>({\n\tfieldName: 'okfUptime',\n\tlabel: 'Owlkin Frenzy Uptime (%)',\n\tlabelTooltip: 'Percentage of fight uptime for Owlkin Frenzy',\n\tpercent: true,\n});\n","import * as PresetUtils from '../../core/preset_utils.js';\nimport {\n\tConsumes,\n\tDebuffs,\n\tExplosive,\n\tFaction,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tPotions,\n\tProfession,\n\tRaidBuffs,\n\tTristateEffect,\n\tUnitReference,\n} from '../../core/proto/common.js';\nimport { BalanceDruid_Options as BalanceDruidOptions, DruidMajorGlyph, DruidMinorGlyph } from '../../core/proto/druid.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\nimport PreraidGear from './gear_sets/preraid.gear.json';\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('Pre-raid Preset', PreraidGear);\nimport P1Gear from './gear_sets/p1.gear.json';\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nimport P2Gear from './gear_sets/p2.gear.json';\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nimport P3AllianceGear from './gear_sets/p3_alliance.gear.json';\nexport const P3_PRESET_ALLI = PresetUtils.makePresetGear('P3 Preset [A]', P3AllianceGear, { faction: Faction.Alliance });\nimport P3HordeGear from './gear_sets/p3_horde.gear.json';\nexport const P3_PRESET_HORDE = PresetUtils.makePresetGear('P3 Preset [H]', P3HordeGear, { faction: Faction.Horde });\nimport P4AllianceGear from './gear_sets/p4_alliance.gear.json';\nexport const P4_PRESET_ALLI = PresetUtils.makePresetGear('P4 Preset [A]', P4AllianceGear, { faction: Faction.Alliance });\nimport P4HordeGear from './gear_sets/p4_horde.gear.json';\nexport const P4_PRESET_HORDE = PresetUtils.makePresetGear('P4 Preset [H]', P4HordeGear, { faction: Faction.Horde });\n\nimport BasicP3AplJson from './apls/basic_p3.apl.json';\nexport const ROTATION_PRESET_P3_APL = PresetUtils.makePresetAPLRotation('P3', BasicP3AplJson);\nimport P4FocusAplJson from './apls/p4_focus_glyph.apl.json';\nexport const ROTATION_PRESET_P4_FOCUS_APL = PresetUtils.makePresetAPLRotation('P4 Focus Glyph', P4FocusAplJson);\nimport P4StarfireAplJson from './apls/p4_starfire_glyph.apl.json';\nexport const ROTATION_PRESET_P4_STARFIRE_APL = PresetUtils.makePresetAPLRotation('P4 Starfire Glyph', P4StarfireAplJson);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\nexport const Phase1Talents = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '5032003115331303213305311231--205003012',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DruidMajorGlyph.GlyphOfFocus,\n\t\t// \tmajor2: DruidMajorGlyph.GlyphOfInsectSwarm,\n\t\t// \tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t// \tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t// \tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t// \tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t// }),\n\t}),\n};\n\nexport const Phase2Talents = {\n\tname: 'Phase 2',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '5012203115331303213305311231--205003012',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DruidMajorGlyph.GlyphOfStarfire,\n\t\t// \tmajor2: DruidMajorGlyph.GlyphOfInsectSwarm,\n\t\t// \tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t// \tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t// \tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t// \tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t// }),\n\t}),\n};\n\nexport const Phase3Talents = {\n\tname: 'Phase 3',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '5102223115331303213305311031--205003012',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DruidMajorGlyph.GlyphOfStarfire,\n\t\t// \tmajor2: DruidMajorGlyph.GlyphOfMoonfire,\n\t\t// \tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t// \tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t// \tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t// \tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t// }),\n\t}),\n};\n\nexport const Phase4Talents = {\n\tname: 'Phase 4',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '5102223115331303213305311031--205003012',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DruidMajorGlyph.GlyphOfFocus,\n\t\t// \tmajor2: DruidMajorGlyph.GlyphOfInsectSwarm,\n\t\t// \tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t// \tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t// \tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t// \tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultOptions = BalanceDruidOptions.create({\n\tclassOptions: {\n\t\tinnervateTarget: UnitReference.create(),\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tprepopPotion: Potions.VolcanicPotion,\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tmarkOfTheWild: true,\n\ticyTalons: true,\n\tmoonkinForm: true,\n\tleaderOfThePack: true,\n\tpowerWordFortitude: true,\n\tstrengthOfEarthTotem: true,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n\tdemonicPact: true,\n\tblessingOfKings: true,\n\tblessingOfMight: true,\n\tcommunion: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tvampiricTouch: true,\n});\n\nexport const DefaultPartyBuffs = PartyBuffs.create({\t\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tsunderArmor: true,\n\tebonPlaguebringer: true,\n\tmangle: true,\n\tcriticalMass: true,\n\tdemoralizingShout: true,\n\tfrostFever: true,\n\tjudgement: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 18,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../../core/components/other_inputs.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl.js';\nimport { Faction, Race, Spec, Stat } from '../../core/proto/common.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport * as DruidInputs from '../inputs.js';\nimport * as BalanceInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecBalanceDruid, {\n\tcssClass: 'balance-druid-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Druid),\n\t// List any known bugs / issues here, and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellHit, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMP5],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P3_PRESET_HORDE.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.43,\n\t\t\t[Stat.StatSpirit]: 0.34,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.82,\n\t\t\t[Stat.StatSpellHaste]: 0.8,\n\t\t\t[Stat.StatMP5]: 0.0,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.Phase3Talents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: Presets.DefaultPartyBuffs,\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [DruidInputs.SelfInnervate()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.MeleeHasteBuff,\n\t\tBuffDebuffInputs.CritBuff,\n\t\tBuffDebuffInputs.AttackPowerPercentBuff,\n\t\tBuffDebuffInputs.MajorArmorDebuff,\n\t\tBuffDebuffInputs.PhysicalDamageDebuff,\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [BalanceInputs.OkfUptime, OtherInputs.TankAssignment, OtherInputs.ReactionTime, OtherInputs.DistanceFromTarget, OtherInputs.DarkIntentUptime],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.Phase1Talents, Presets.Phase2Talents, Presets.Phase3Talents, Presets.Phase4Talents],\n\t\trotations: [Presets.ROTATION_PRESET_P3_APL, Presets.ROTATION_PRESET_P4_FOCUS_APL, Presets.ROTATION_PRESET_P4_STARFIRE_APL],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET_HORDE,\n\t\t\tPresets.P3_PRESET_ALLI,\n\t\t\tPresets.P4_PRESET_HORDE,\n\t\t\tPresets.P4_PRESET_ALLI,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecBalanceDruid>): APLRotation => {\n\t\treturn Presets.ROTATION_PRESET_P3_APL.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecBalanceDruid,\n\t\t\ttalents: Presets.Phase2Talents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_ALLI.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_ALLI.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_HORDE.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_HORDE.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class BalanceDruidSimUI extends IndividualSimUI<Spec.SpecBalanceDruid> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecBalanceDruid>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["OkfUptime","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","percent","PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET_ALLI","P3AllianceGear","faction","Faction","Alliance","P3_PRESET_HORDE","P3HordeGear","Horde","P4_PRESET_ALLI","P4AllianceGear","P4_PRESET_HORDE","P4HordeGear","ROTATION_PRESET_P3_APL","PresetUtils.makePresetAPLRotation","BasicP3AplJson","ROTATION_PRESET_P4_FOCUS_APL","P4FocusAplJson","ROTATION_PRESET_P4_STARFIRE_APL","P4StarfireAplJson","Phase1Talents","name","data","SavedTalents","create","Phase2Talents","Phase3Talents","Phase4Talents","DefaultOptions","BalanceDruidOptions","classOptions","innervateTarget","UnitReference","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","prepopPotion","VolcanicPotion","fillerExplosive","Explosive","ExplosiveSaroniteBomb","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","DefaultIndividualBuffs","IndividualBuffs","vampiricTouch","DefaultPartyBuffs","PartyBuffs","DefaultDebuffs","Debuffs","bloodFrenzy","sunderArmor","ebonPlaguebringer","mangle","criticalMass","demoralizingShout","frostFever","judgement","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecBalanceDruid","cssClass","cssScheme","PlayerClasses","getCssClass","Druid","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","gear","Presets.P3_PRESET_HORDE","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.Phase3Talents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","Presets.DefaultPartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","DruidInputs.SelfInnervate","includeBuffDebuffInputs","BuffDebuffInputs.MeleeHasteBuff","BuffDebuffInputs.CritBuff","BuffDebuffInputs.AttackPowerPercentBuff","BuffDebuffInputs.MajorArmorDebuff","BuffDebuffInputs.PhysicalDamageDebuff","excludeBuffDebuffInputs","otherInputs","inputs","BalanceInputs.OkfUptime","OtherInputs.TankAssignment","OtherInputs.ReactionTime","OtherInputs.DistanceFromTarget","OtherInputs.DarkIntentUptime","encounterPicker","showExecuteProportion","presets","Presets.Phase1Talents","Presets.Phase2Talents","Presets.Phase4Talents","rotations","Presets.ROTATION_PRESET_P3_APL","Presets.ROTATION_PRESET_P4_FOCUS_APL","Presets.ROTATION_PRESET_P4_STARFIRE_APL","Presets.PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P3_PRESET_ALLI","Presets.P4_PRESET_HORDE","Presets.P4_PRESET_ALLI","autoRotation","_player","rotation","raidSimPresets","spec","otherDefaults","defaultFactionRaces","Unknown","Race","RaceUnknown","RaceNightElf","RaceTauren","defaultGear","BalanceDruidSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"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"}