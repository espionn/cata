{"version":3,"file":"sim-CbRasuYS.chunk.js","sources":["../../../ui/priest/holy/presets.ts","../../../ui/priest/holy/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { Consumes, Debuffs, Flask, Food, Glyphs, IndividualBuffs, Potions, Profession, RaidBuffs, TristateEffect } from '../../core/proto/common.js';\nimport { HolyPriest_Options as Options, PriestMajorGlyph as MajorGlyph, PriestMinorGlyph as MinorGlyph, PriestOptions_Armor } from '../../core/proto/priest.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport AOE24Apl from './apls/aoe_2_4.apl.json';\nimport AOE4PlusApl from './apls/aoe_4_plus.apl.json';\nimport DefaultApl from './apls/default.apl.json';\nimport P1Gear from './gear_sets/p1.gear.json';\nimport P2Gear from './gear_sets/p2.gear.json';\nimport P3Gear from './gear_sets/p3.gear.json';\nimport P4Gear from './gear_sets/p4.gear.json';\nimport PreraidGear from './gear_sets/preraid.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('Preraid Preset', PreraidGear);\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\nexport const ROTATION_PRESET_AOE24 = PresetUtils.makePresetAPLRotation('AOE (2 to 4 targets)', AOE24Apl);\nexport const ROTATION_PRESET_AOE4PLUS = PresetUtils.makePresetAPLRotation('AOE (4+ targets)', AOE4PlusApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '05032031--325023051223010323151301351',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: MajorGlyph.GlyphOfShadow,\n\t\t// \tmajor2: MajorGlyph.GlyphOfMindFlay,\n\t\t// \tmajor3: MajorGlyph.GlyphOfDispersion,\n\t\t// \tminor1: MinorGlyph.GlyphOfFortitude,\n\t\t// \tminor2: MinorGlyph.GlyphOfShadowProtection,\n\t\t// \tminor3: MinorGlyph.GlyphOfShadowfiend,\n\t\t// }),\n\t}),\n};\n\nexport const EnlightenmentTalents = {\n\tname: 'Enlightenment',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '05032031303005022--3250230012230101231513011',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: MajorGlyph.GlyphOfShadow,\n\t\t// \tmajor2: MajorGlyph.GlyphOfMindFlay,\n\t\t// \tmajor3: MajorGlyph.GlyphOfShadowWordDeath,\n\t\t// \tminor1: MinorGlyph.GlyphOfFortitude,\n\t\t// \tminor2: MinorGlyph.GlyphOfShadowProtection,\n\t\t// \tminor3: MinorGlyph.GlyphOfShadowfiend,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultOptions = Options.create({\n\tclassOptions: {\n\t\tarmor: PriestOptions_Armor.InnerFire,\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tdefaultPotion: Potions.VolcanicPotion,\n\tprepopPotion: Potions.VolcanicPotion,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tmarkOfTheWild: true,\n\ticyTalons: true,\n\tmoonkinForm: true,\n\tleaderOfThePack: true,\n\tpowerWordFortitude: true,\n\tstrengthOfEarthTotem: true,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n\tdemonicPact: true,\n\tblessingOfKings: true,\n\tblessingOfMight: true,\n\tcommunion: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tvampiricTouch: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tsunderArmor: true,\n\tebonPlaguebringer: true,\n\tmangle: true,\n\tcriticalMass: true,\n\tdemoralizingShout: true,\n\tfrostFever: true,\n\tjudgement: true,\n});\n\nexport const OtherDefaults = {\n\tchannelClipDelay: 100,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../../core/components/other_inputs.js';\nimport * as Mechanics from '../../core/constants/mechanics.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl.js';\nimport { Faction, PartyBuffs, Race, Spec, Stat } from '../../core/proto/common.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport * as PriestInputs from '../inputs';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecHolyPriest, {\n\tcssClass: 'holy-priest-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Priest),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellHit, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMP5],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecHolyPriest>) => {\n\t// \tlet stats = new Stats();\n\t// \tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P4_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.11,\n\t\t\t[Stat.StatSpirit]: 0.47,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.87,\n\t\t\t[Stat.StatSpellCrit]: 0.74,\n\t\t\t[Stat.StatSpellHaste]: 1.65,\n\t\t\t[Stat.StatMP5]: 0.0,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [PriestInputs.ArmorInput()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.ReplenishmentBuff,\n\t\tBuffDebuffInputs.MeleeHasteBuff,\n\t\tBuffDebuffInputs.CritBuff,\n\t\tBuffDebuffInputs.MP5Buff,\n\t\tBuffDebuffInputs.AttackPowerPercentBuff,\n\t\tBuffDebuffInputs.StaminaBuff,\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.TankAssignment, OtherInputs.ChannelClipDelay],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.StandardTalents, Presets.EnlightenmentTalents],\n\t\trotations: [Presets.ROTATION_PRESET_DEFAULT, Presets.ROTATION_PRESET_AOE24, Presets.ROTATION_PRESET_AOE4PLUS],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.PRERAID_PRESET, Presets.P1_PRESET, Presets.P2_PRESET, Presets.P3_PRESET, Presets.P4_PRESET],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecHolyPriest>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets > 4) {\n\t\t\treturn Presets.ROTATION_PRESET_AOE4PLUS.rotation.rotation!;\n\t\t} else if (numTargets > 1) {\n\t\t\treturn Presets.ROTATION_PRESET_AOE24.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t}\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecHolyPriest,\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class HolyPriestSimUI extends IndividualSimUI<Spec.SpecHolyPriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHolyPriest>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","ROTATION_PRESET_AOE24","AOE24Apl","ROTATION_PRESET_AOE4PLUS","AOE4PlusApl","StandardTalents","name","data","SavedTalents","create","EnlightenmentTalents","DefaultOptions","Options","classOptions","armor","PriestOptions_Armor","InnerFire","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","defaultPotion","Potions","VolcanicPotion","prepopPotion","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","DefaultIndividualBuffs","IndividualBuffs","vampiricTouch","DefaultDebuffs","Debuffs","bloodFrenzy","sunderArmor","ebonPlaguebringer","mangle","criticalMass","demoralizingShout","frostFever","judgement","OtherDefaults","channelClipDelay","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecHolyPriest","cssClass","cssScheme","PlayerClasses","getCssClass","Priest","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.P4_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","PriestInputs.ArmorInput","includeBuffDebuffInputs","BuffDebuffInputs.ReplenishmentBuff","BuffDebuffInputs.MeleeHasteBuff","BuffDebuffInputs.CritBuff","BuffDebuffInputs.MP5Buff","BuffDebuffInputs.AttackPowerPercentBuff","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.ChannelClipDelay","encounterPicker","showExecuteProportion","presets","Presets.EnlightenmentTalents","rotations","Presets.ROTATION_PRESET_DEFAULT","Presets.ROTATION_PRESET_AOE24","Presets.ROTATION_PRESET_AOE4PLUS","Presets.PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P3_PRESET","autoRotation","player","numTargets","sim","encounter","targets","length","rotation","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceDwarf","Horde","RaceUndead","defaultGear","HolyPriestSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}