{"version":3,"file":"sim-pQCosGXH.chunk.js","sources":["../../../ui/mage/arcane/inputs.ts","../../../ui/mage/arcane/presets.ts","../../../ui/mage/arcane/sim.ts"],"sourcesContent":["import * as InputHelpers from '../../core/components/input_helpers';\nimport { Player } from '../../core/player';\nimport { Spec } from '../../core/proto/common';\nimport { TypedEvent } from '../../core/typed_event';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const FocusMagicUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecArcaneMage>({\n\tfieldName: 'focusMagicPercentUptime',\n\tlabel: 'Focus Magic Percent Uptime',\n\tlabelTooltip: 'Percent of uptime for Focus Magic Buddy',\n\textraCssClasses: ['within-raid-sim-hide'],\n});\n\nexport const MageRotationConfig = {\n\tinputs: [\n\t\t// ********************************************************\n\t\t//                      ARCANE INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecArcaneMage>({\n\t\t\tfieldName: 'only3ArcaneBlastStacksBelowManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'Stack Arcane Blast to 3 below mana %',\n\t\t\tlabelTooltip: 'When below this mana %, AM/ABarr will be used at 3 stacks of AB instead of 4.',\n\t\t\tshowWhen: (player: Player<Spec.SpecArcaneMage>) => player.getTalentTree() == 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecArcaneMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecArcaneMage>({\n\t\t\tfieldName: 'blastWithoutMissileBarrageAboveManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'AB without Missile Barrage above mana %',\n\t\t\tlabelTooltip: 'When above this mana %, spam AB until a Missile Barrage proc occurs.',\n\t\t\tshowWhen: (player: Player<Spec.SpecArcaneMage>) => player.getTalentTree() == 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecArcaneMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecArcaneMage>({\n\t\t\tfieldName: 'missileBarrageBelowManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'Use Missile Barrage ASAP below mana %',\n\t\t\tlabelTooltip: 'When below this mana %, use Missile Barrage proc as soon as possible. Can be useful to conserve mana.',\n\t\t\tshowWhen: (player: Player<Spec.SpecArcaneMage>) => player.getTalentTree() == 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecArcaneMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t// \tInputHelpers.makeRotationBooleanInput<Spec.SpecArcaneMage>({\n\t// \t\tfieldName: 'useArcaneBarrage',\n\t// \t\tlabel: 'Use Arcane Barrage',\n\t// \t\tlabelTooltip: 'Includes Arcane Barrage in the rotation.',\n\t// \t\tenableWhen: (player: Player<Spec.SpecArcaneMage>) => player.getTalents().arcaneBarrage,\n\t// \t\tshowWhen: (player: Player<Spec.SpecArcaneMage>) => player.getTalentTree() == 0,\n\t// \t\tchangeEmitter: (player: Player<Spec.SpecArcaneMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t// \t}),\n\t],\n};\n","import * as PresetUtils from '../../core/preset_utils';\nimport { Conjured, Consumes, Faction, Flask, Food, Glyphs, Potions, Profession, Spec, UnitReference } from '../../core/proto/common';\nimport {\n\tArcaneMage_Options as MageOptions,\n\tArcaneMage_Rotation as MageRotation,\n\tMageMajorGlyph,\n\tMageMinorGlyph,\n\tMageOptions_ArmorType as ArmorType,\n} from '../../core/proto/mage';\nimport { SavedTalents } from '../../core/proto/ui';\nimport ArcaneApl from './apls/arcane.apl.json';\nimport ArcaneAoeApl from './apls/arcane_aoe.apl.json';\nimport P1ArcaneGear from './gear_sets/p1_arcane.gear.json';\nimport P2ArcaneGear from './gear_sets/p2_arcane.gear.json';\nimport P3ArcaneAllianceGear from './gear_sets/p3_arcane_alliance.gear.json';\nimport P3ArcaneHordeGear from './gear_sets/p3_arcane_horde.gear.json';\nimport P4ArcaneAllianceGear from './gear_sets/p4_arcane_alliance.gear.json';\nimport P4ArcaneHordeGear from './gear_sets/p4_arcane_horde.gear.json';\nimport PreraidArcaneGear from './gear_sets/preraid_arcane.gear.json';\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\nexport const ARCANE_PRERAID_PRESET = PresetUtils.makePresetGear('Arcane Preraid Preset', PreraidArcaneGear, { talentTree: 0 });\nexport const ARCANE_P1_PRESET = PresetUtils.makePresetGear('Arcane P1 Preset', P1ArcaneGear, { talentTree: 0 });\nexport const ARCANE_P2_PRESET = PresetUtils.makePresetGear('Arcane P2 Preset', P2ArcaneGear, { talentTree: 0 });\nexport const ARCANE_P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('Arcane P3 Preset [A]', P3ArcaneAllianceGear, { talentTree: 0, faction: Faction.Alliance });\nexport const ARCANE_P3_PRESET_HORDE = PresetUtils.makePresetGear('Arcane P3 Preset [H]', P3ArcaneHordeGear, { talentTree: 0, faction: Faction.Horde });\nexport const ARCANE_P4_PRESET_ALLIANCE = PresetUtils.makePresetGear('Arcane P4 Preset [A]', P4ArcaneAllianceGear, { talentTree: 0, faction: Faction.Alliance });\nexport const ARCANE_P4_PRESET_HORDE = PresetUtils.makePresetGear('Arcane P4 Preset [H]', P4ArcaneHordeGear, { talentTree: 0, faction: Faction.Horde });\n\nexport const DefaultSimpleRotation = MageRotation.create({\n\tonly3ArcaneBlastStacksBelowManaPercent: 0.15,\n\tblastWithoutMissileBarrageAboveManaPercent: 0.2,\n\tmissileBarrageBelowManaPercent: 0,\n\tuseArcaneBarrage: false,\n});\n\nexport const ROTATION_PRESET_SIMPLE = PresetUtils.makePresetSimpleRotation('Simple Default', Spec.SpecArcaneMage, DefaultSimpleRotation);\nexport const ARCANE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Arcane', ArcaneApl, { talentTree: 0 });\nexport const ARCANE_ROTATION_PRESET_AOE = PresetUtils.makePresetAPLRotation('Arcane AOE', ArcaneAoeApl, { talentTree: 0 });\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\nexport const ArcaneTalents = {\n\tname: 'Arcane',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '23000513310033015032310250532-03-023303001',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: MageMajorGlyph.GlyphOfArcaneBlast,\n\t\t// \tmajor2: MageMajorGlyph.GlyphOfArcaneMissiles,\n\t\t// \tmajor3: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t// \tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t// \tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t// \tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultArcaneOptions = MageOptions.create({\n\tclassOptions: {\n\t\tarmor: ArmorType.MoltenArmor,\n\t},\n\tfocusMagicPercentUptime: 99,\n\tfocusMagicTarget: UnitReference.create(),\n});\n\nexport const DefaultArcaneConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredDarkRune,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFirecrackerSalmon,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import * as OtherInputs from '../../core/components/other_inputs';\nimport * as Mechanics from '../../core/constants/mechanics';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { Mage } from '../../core/player_classes/mage';\nimport { APLAction, APLListItem, APLPrepullAction, APLRotation } from '../../core/proto/apl';\nimport { Cooldowns, Debuffs, Faction, IndividualBuffs, PartyBuffs, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common';\nimport { ArcaneMage_Rotation } from '../../core/proto/mage';\nimport * as AplUtils from '../../core/proto_utils/apl_utils';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as MageInputs from '../inputs';\nimport * as ArcaneInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecArcaneMage, {\n\tcssClass: 'arcane-mage-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(Mage),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellHit, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMP5],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecArcaneMage>) => {\n\t// \tlet stats = new Stats();\n\n\t// \tif (player.getTalentTree() === 0) {\n\t// \t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().arcaneFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t// \t}\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.ARCANE_P4_PRESET_HORDE.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.48,\n\t\t\t[Stat.StatSpirit]: 0.42,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.38,\n\t\t\t[Stat.StatSpellCrit]: 0.58,\n\t\t\t[Stat.StatSpellHaste]: 0.94,\n\t\t\t[Stat.StatMP5]: 0.09,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultArcaneConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.ArcaneTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultArcaneOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\tmanaTideTotems: 1,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tinnervateCount: 0,\n\t\t\tvampiricTouch: true,\n\t\t\tfocusMagic: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgement: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tshadowAndFlame: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [MageInputs.ArmorInput()],\n\t// Inputs to include in the 'Rotation' section on the settings tab.\n\trotationInputs: ArcaneInputs.MageRotationConfig,\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\t//Should add hymn of hope, revitalize, and\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [ArcaneInputs.FocusMagicUptime, OtherInputs.ReactionTime, OtherInputs.DistanceFromTarget, OtherInputs.TankAssignment],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: true,\n\t},\n\n\tpresets: {\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_PRESET_SIMPLE, Presets.ARCANE_ROTATION_PRESET_DEFAULT, Presets.ARCANE_ROTATION_PRESET_AOE],\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.ArcaneTalents],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.ARCANE_PRERAID_PRESET,\n\t\t\tPresets.ARCANE_P1_PRESET,\n\t\t\tPresets.ARCANE_P2_PRESET,\n\t\t\tPresets.ARCANE_P3_PRESET_ALLIANCE,\n\t\t\tPresets.ARCANE_P3_PRESET_HORDE,\n\t\t\tPresets.ARCANE_P4_PRESET_HORDE,\n\t\t\tPresets.ARCANE_P4_PRESET_ALLIANCE,\n\t\t],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecArcaneMage>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets > 3) {\n\t\t\treturn Presets.ARCANE_ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.ARCANE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t}\n\t},\n\n\tsimpleRotation: (player: Player<Spec.SpecArcaneMage>, simple: ArcaneMage_Rotation, cooldowns: Cooldowns): APLRotation => {\n\t\tconst [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t\tconst prepullMirrorImage = APLPrepullAction.fromJsonString(\n\t\t\t`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":55342}}},\"doAtValue\":{\"const\":{\"val\":\"-2s\"}}}`,\n\t\t);\n\n\t\tconst berserking = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}`,\n\t\t);\n\t\tconst hyperspeedAcceleration = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}`,\n\t\t);\n\t\tconst combatPot = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}}`,\n\t\t);\n\t\tconst evocation = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"25%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":12051}}}`,\n\t\t);\n\n\t\tconst arcaneBlastBelowStacks = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":36032}}},\"rhs\":{\"const\":{\"val\":\"4\"}}}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":36032}}},\"rhs\":{\"const\":{\"val\":\"3\"}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(\n\t\t\t\tsimple.only3ArcaneBlastStacksBelowManaPercent * 100\n\t\t\t).toFixed(0)}%\"}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":42897}}}`,\n\t\t);\n\t\tconst arcaneMissilesWithMissileBarrageBelowMana = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"and\":{\"vals\":[{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44401}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(\n\t\t\t\tsimple.missileBarrageBelowManaPercent * 100\n\t\t\t).toFixed(0)}%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":42846}}}`,\n\t\t);\n\t\tconst arcaneMisslesWithMissileBarrage = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44401}}},\"castSpell\":{\"spellId\":{\"spellId\":42846}}}`,\n\t\t);\n\t\tconst arcaneBlastAboveMana = APLAction.fromJsonString(\n\t\t\t`{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(\n\t\t\t\tsimple.blastWithoutMissileBarrageAboveManaPercent * 100\n\t\t\t).toFixed(0)}%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42897}}}`,\n\t\t);\n\t\tconst arcaneMissiles = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42846}}}`);\n\t\tconst arcaneBarrage = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":44781}}}`);\n\n\t\tprepullActions.push(prepullMirrorImage);\n\n\t\tactions.push(\n\t\t\t...([\n\t\t\t\tberserking,\n\t\t\t\thyperspeedAcceleration,\n\t\t\t\tcombatPot,\n\t\t\t\tsimple.missileBarrageBelowManaPercent > 0 ? arcaneMissilesWithMissileBarrageBelowMana : null,\n\t\t\t\tarcaneBlastBelowStacks,\n\t\t\t\tarcaneMisslesWithMissileBarrage,\n\t\t\t\tevocation,\n\t\t\t\tarcaneBlastAboveMana,\n\t\t\t\tsimple.useArcaneBarrage ? arcaneBarrage : null,\n\t\t\t\tarcaneMissiles,\n\t\t\t].filter(a => a) as Array<APLAction>),\n\t\t);\n\n\t\treturn APLRotation.create({\n\t\t\tprepullActions: prepullActions,\n\t\t\tpriorityList: actions.map(action =>\n\t\t\t\tAPLListItem.create({\n\t\t\t\t\taction: action,\n\t\t\t\t}),\n\t\t\t),\n\t\t});\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecArcaneMage,\n\t\t\ttalents: Presets.ArcaneTalents.data,\n\t\t\tspecOptions: Presets.DefaultArcaneOptions,\n\t\t\tconsumes: Presets.DefaultArcaneConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.ARCANE_P1_PRESET.gear,\n\t\t\t\t\t2: Presets.ARCANE_P2_PRESET.gear,\n\t\t\t\t\t3: Presets.ARCANE_P3_PRESET_ALLIANCE.gear,\n\t\t\t\t\t4: Presets.ARCANE_P4_PRESET_ALLIANCE.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.ARCANE_P1_PRESET.gear,\n\t\t\t\t\t2: Presets.ARCANE_P2_PRESET.gear,\n\t\t\t\t\t3: Presets.ARCANE_P3_PRESET_HORDE.gear,\n\t\t\t\t\t4: Presets.ARCANE_P4_PRESET_HORDE.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ArcaneMageSimUI extends IndividualSimUI<Spec.SpecArcaneMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecArcaneMage>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["FocusMagicUptime","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","extraCssClasses","MageRotationConfig","inputs","InputHelpers.makeRotationNumberInput","percent","showWhen","player","getTalentTree","changeEmitter","TypedEvent","onAny","rotationChangeEmitter","talentsChangeEmitter","ARCANE_PRERAID_PRESET","PresetUtils.makePresetGear","talentTree","ARCANE_P1_PRESET","P1ArcaneGear","ARCANE_P2_PRESET","P2ArcaneGear","ARCANE_P3_PRESET_ALLIANCE","P3ArcaneAllianceGear","faction","Faction","Alliance","ARCANE_P3_PRESET_HORDE","P3ArcaneHordeGear","Horde","ARCANE_P4_PRESET_ALLIANCE","P4ArcaneAllianceGear","ARCANE_P4_PRESET_HORDE","P4ArcaneHordeGear","DefaultSimpleRotation","MageRotation","create","only3ArcaneBlastStacksBelowManaPercent","blastWithoutMissileBarrageAboveManaPercent","missileBarrageBelowManaPercent","useArcaneBarrage","ROTATION_PRESET_SIMPLE","PresetUtils.makePresetSimpleRotation","Spec","SpecArcaneMage","ARCANE_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","ArcaneApl","ARCANE_ROTATION_PRESET_AOE","ArcaneAoeApl","ArcaneTalents","name","data","SavedTalents","DefaultArcaneOptions","MageOptions","classOptions","armor","ArmorType","MoltenArmor","focusMagicPercentUptime","focusMagicTarget","UnitReference","DefaultArcaneConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","defaultConjured","Conjured","ConjuredDarkRune","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFirecrackerSalmon","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","cssClass","cssScheme","PlayerClasses","getCssClass","Mage","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.ARCANE_P4_PRESET_HORDE","epWeights","Stats","fromMap","consumes","Presets.DefaultArcaneConsumes","talents","Presets.ArcaneTalents","specOptions","Presets.DefaultArcaneOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","manaTideTotems","individualBuffs","IndividualBuffs","innervateCount","vampiricTouch","focusMagic","debuffs","Debuffs","judgement","ebonPlaguebringer","shadowAndFlame","playerIconInputs","MageInputs.ArmorInput","rotationInputs","ArcaneInputs.MageRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","ArcaneInputs.FocusMagicUptime","OtherInputs.ReactionTime","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_SIMPLE","Presets.ARCANE_ROTATION_PRESET_DEFAULT","Presets.ARCANE_ROTATION_PRESET_AOE","Presets.ARCANE_PRERAID_PRESET","Presets.ARCANE_P1_PRESET","Presets.ARCANE_P2_PRESET","Presets.ARCANE_P3_PRESET_ALLIANCE","Presets.ARCANE_P3_PRESET_HORDE","Presets.ARCANE_P4_PRESET_ALLIANCE","autoRotation","sim","encounter","targets","length","rotation","simpleRotation","simple","cooldowns","prepullActions","actions","AplUtils.standardCooldownDefaults","prepullMirrorImage","APLPrepullAction","fromJsonString","berserking","APLAction","hyperspeedAcceleration","combatPot","evocation","arcaneBlastBelowStacks","toFixed","arcaneMissilesWithMissileBarrageBelowMana","arcaneMisslesWithMissileBarrage","arcaneBlastAboveMana","arcaneMissiles","arcaneBarrage","push","filter","a","APLRotation","priorityList","map","action","APLListItem","raidSimPresets","spec","otherDefaults","defaultFactionRaces","Unknown","Race","RaceUnknown","RaceGnome","RaceTroll","defaultGear","ArcaneMageSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}