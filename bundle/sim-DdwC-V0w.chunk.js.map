{"version":3,"file":"sim-DdwC-V0w.chunk.js","sources":["../../../ui/shaman/enhancement/inputs.ts","../../../ui/shaman/enhancement/presets.ts","../../../ui/shaman/enhancement/sim.ts","../../../ui/core/components/fire_elemental_inputs.ts"],"sourcesContent":["import * as InputHelpers from '../../core/components/input_helpers.js';\nimport { Spec } from '../../core/proto/common.js';\nimport { ShamanImbue, ShamanSyncType } from '../../core/proto/shaman.js';\nimport { ActionId } from '../../core/proto_utils/action_id.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ShamanImbueOH = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanImbue>({\n\tfieldName: 'imbueOh',\n\tvalues: [\n\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Off Hand Enchant' },\n\t\t{ actionId: ActionId.fromSpellId(8232), value: ShamanImbue.WindfuryWeapon },\n\t\t{ actionId: ActionId.fromSpellId(8024), value: ShamanImbue.FlametongueWeapon },\n\t\t{ actionId: ActionId.fromSpellId(8033), value: ShamanImbue.FrostbrandWeapon },\n\t],\n});\n\nexport const SyncTypeInput = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecEnhancementShaman, ShamanSyncType>({\n\tfieldName: 'syncType',\n\tlabel: 'Sync/Stagger Setting',\n\tlabelTooltip: `Choose your sync or stagger option Perfect\n\t\t<ul>\n\t\t\t<li><div>Auto: Will auto pick sync options based on your weapons attack speeds</div></li>\n\t\t\t<li><div>None: No Sync or Staggering, used for mismatched weapon speeds</div></li>\n\t\t\t<li><div>Perfect Sync: Makes your weapons always attack at the same time, for match weapon speeds</div></li>\n\t\t\t<li><div>Delayed Offhand: Adds a slight delay to the offhand attacks while staying within the 0.5s flurry ICD window</div></li>\n\t\t</ul>`,\n\tvalues: [\n\t\t{ name: 'Automatic', value: ShamanSyncType.Auto },\n\t\t{ name: 'None', value: ShamanSyncType.NoSync },\n\t\t{ name: 'Perfect Sync', value: ShamanSyncType.SyncMainhandOffhandSwings },\n\t\t{ name: 'Delayed Offhand', value: ShamanSyncType.DelayOffhandSwings },\n\t],\n});\n","import * as PresetUtils from '../../core/preset_utils.js';\nimport { Consumes, Debuffs, Faction, Flask, Food, Glyphs, Potions, RaidBuffs, TristateEffect } from '../../core/proto/common.js';\nimport {\n\tAirTotem,\n\tEarthTotem,\n\tEnhancementShaman_Options as EnhancementShamanOptions,\n\tFireTotem,\n\tShamanImbue,\n\tShamanPrimeGlyph,\n\tShamanMajorGlyph,\n\tShamanMinorGlyph,\n\tShamanShield,\n\tShamanSyncType,\n\tShamanTotems,\n\tWaterTotem,\n} from '../../core/proto/shaman.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport DefaultApl from './apls/default.apl.json';\nimport P1Gear from './gear_sets/p1.gear.json';\nimport P2FtGear from './gear_sets/p2_ft.gear.json';\nimport P2WfGear from './gear_sets/p2_wf.gear.json';\nimport P3AllianceGear from './gear_sets/p3_alliance.gear.json';\nimport P3HordeGear from './gear_sets/p3_horde.gear.json';\nimport P4FtGear from './gear_sets/p4_ft.gear.json';\nimport P4WfGear from './gear_sets/p4_wf.gear.json';\nimport PreraidGear from './gear_sets/preraid.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('Preraid Preset', PreraidGear);\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nexport const P2_PRESET_FT = PresetUtils.makePresetGear('P2 Preset FT', P2FtGear);\nexport const P2_PRESET_WF = PresetUtils.makePresetGear('P2 Preset WF', P2WfGear);\nexport const P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('P3 Preset [A]', P3AllianceGear, { faction: Faction.Alliance });\nexport const P3_PRESET_HORDE = PresetUtils.makePresetGear('P3 Preset [H]', P3HordeGear, { faction: Faction.Horde });\nexport const P4_PRESET_FT = PresetUtils.makePresetGear('P4 Preset FT', P4FtGear);\nexport const P4_PRESET_WF = PresetUtils.makePresetGear('P4 Preset WF', P4WfGear);\n\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '3020003-2333310013003012321',\n\t\tglyphs: Glyphs.create({\n\t\t\tprime1: ShamanPrimeGlyph.GlyphOfLavaLash,\n\t\t\tprime2: ShamanPrimeGlyph.GlyphOfStormstrike,\n\t\t\tprime3: ShamanPrimeGlyph.GlyphOfWindfuryWeapon,\n\t\t\tmajor1: ShamanMajorGlyph.GlyphOfLightningShield,\n\t\t\tmajor2: ShamanMajorGlyph.GlyphOfChainLightning,\n\t\t\tmajor3: ShamanMajorGlyph.GlyphOfFireNova,\n\t\t\tminor1: ShamanMinorGlyph.GlyphOfWaterWalking,\n\t\t\tminor2: ShamanMinorGlyph.GlyphOfRenewedLife,\n\t\t\tminor3: ShamanMinorGlyph.GlyphOfTheArcticWolf,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = EnhancementShamanOptions.create({\n\tclassOptions: {\n\t\tshield: ShamanShield.LightningShield,\n\t\ttotems: ShamanTotems.create({\n\t\t\tearth: EarthTotem.StrengthOfEarthTotem,\n\t\t\tfire: FireTotem.MagmaTotem,\n\t\t\twater: WaterTotem.ManaSpringTotem,\n\t\t\tair: AirTotem.WindfuryTotem,\n\t\t}),\n\t\timbueMh: ShamanImbue.WindfuryWeapon,\n\t},\n\timbueOh: ShamanImbue.FlametongueWeapon,\n\tsyncType: ShamanSyncType.Auto,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodFishFeast,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tmarkOfTheWild: true,\n\ticyTalons: true,\n\tmoonkinForm: true,\n\tleaderOfThePack: true,\n\tpowerWordFortitude: true,\n\tstrengthOfEarthTotem: true,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n\tdemonicPact: true,\n\tblessingOfKings: true,\n\tblessingOfMight: true,\n\tcommunion: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tsunderArmor: true,\n\tebonPlaguebringer: true,\n\tmangle: true,\n\tcriticalMass: true,\n\tdemoralizingShout: true,\n\tfrostFever: true,\n\tjudgement: true,\n});\n","import { FireElementalSection } from '../../core/components/fire_elemental_inputs.js';\nimport * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../../core/components/other_inputs.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl.js';\nimport { Faction, IndividualBuffs, ItemSlot, PartyBuffs, PseudoStat, Race, Spec, Stat, TristateEffect, UnitStats } from '../../core/proto/common.js';\nimport { ShamanImbue } from '../../core/proto/shaman.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport * as ShamanInputs from '../inputs.js';\nimport * as EnhancementInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecEnhancementShaman, {\n\tcssClass: 'enhancement-shaman-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Shaman),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\toverwriteDisplayStats: (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\tconst playerStats = player.getCurrentStats();\n\n\t\tconst statMod = (current: UnitStats, previous?: UnitStats) => {\n\t\t\treturn new Stats().withStat(Stat.StatSpellPower, Stats.fromProto(current).subtract(Stats.fromProto(previous)).getStat(Stat.StatAttackPower) * 0.55);\n\t\t}\n\n\t\tconst base = statMod(playerStats.baseStats!);\n\t\tconst gear = statMod(playerStats.gearStats!, playerStats.baseStats);\n\t\tconst talents = statMod(playerStats.talentsStats!, playerStats.gearStats);\n\t\tconst buffs = statMod(playerStats.buffsStats!, playerStats.talentsStats);\n\t\tconst consumes = statMod(playerStats.consumesStats!, playerStats.buffsStats);\n\t\tconst final = new Stats().withStat(Stat.StatSpellPower, Stats.fromProto(playerStats.finalStats).getStat(Stat.StatAttackPower) * 0.55);\n\n\t\treturn {\n\t\t\tbase: base,\n\t\t\tgear: gear,\n\t\t\ttalents: talents,\n\t\t\tbuffs: buffs,\n\t\t\tconsumes: consumes,\n\t\t\tfinal: final,\n\t\t\tstats: [Stat.StatSpellPower],\n\t\t};\n\t},\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatAgility,\n\t\tStat.StatIntellect,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatExpertise,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMastery,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps, PseudoStat.PseudoStatOffHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatStamina,\n\t\tStat.StatAgility,\n\t\tStat.StatIntellect,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatExpertise,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMastery,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P4_PRESET_WF.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatIntellect]: 1.48,\n\t\t\t\t[Stat.StatAgility]: 1.59,\n\t\t\t\t[Stat.StatStrength]: 1.1,\n\t\t\t\t[Stat.StatSpellPower]: 1.13,\n\t\t\t\t[Stat.StatSpellHit]: 0, //default EP assumes cap\n\t\t\t\t[Stat.StatSpellCrit]: 0.91,\n\t\t\t\t[Stat.StatSpellHaste]: 0.37,\n\t\t\t\t[Stat.StatAttackPower]: 1.0,\n\t\t\t\t[Stat.StatMeleeHit]: 1.38,\n\t\t\t\t[Stat.StatMeleeCrit]: 0.81,\n\t\t\t\t[Stat.StatMeleeHaste]: 1.61, //haste is complicated\n\t\t\t\t[Stat.StatArmorPenetration]: 0.48,\n\t\t\t\t[Stat.StatExpertise]: 0, //default EP assumes cap\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 5.21,\n\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.21,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tvampiricTouch: true,\n\t\t}),\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [ShamanInputs.ShamanShieldInput(), ShamanInputs.ShamanImbueMH(), EnhancementInputs.ShamanImbueOH],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [BuffDebuffInputs.ReplenishmentBuff, BuffDebuffInputs.MP5Buff, BuffDebuffInputs.SpellHasteBuff],\n\texcludeBuffDebuffInputs: [BuffDebuffInputs.BleedDebuff],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [EnhancementInputs.SyncTypeInput, OtherInputs.TankAssignment, OtherInputs.InFrontOfTarget],\n\t},\n\titemSwapSlots: [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand],\n\tcustomSections: [ShamanInputs.TotemsSection, FireElementalSection],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.StandardTalents],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_PRESET_DEFAULT],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET_FT,\n\t\t\tPresets.P2_PRESET_WF,\n\t\t\tPresets.P3_PRESET_ALLIANCE,\n\t\t\tPresets.P3_PRESET_HORDE,\n\t\t\tPresets.P4_PRESET_FT,\n\t\t\tPresets.P4_PRESET_WF,\n\t\t],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecEnhancementShaman>): APLRotation => {\n\t\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecEnhancementShaman,\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET_FT.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_ALLIANCE.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_FT.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET_FT.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_HORDE.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_FT.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class EnhancementShamanSimUI extends IndividualSimUI<Spec.SpecEnhancementShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecEnhancementShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n","import * as InputHelpers from '../components/input_helpers.js';\nimport { IndividualSimUI } from '../individual_sim_ui';\nimport { Player } from '../player';\nimport { ShamanTotems } from '../proto/shaman';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { ShamanSpecs } from '../proto_utils/utils';\nimport { EventID } from '../typed_event';\nimport { BooleanPicker } from './boolean_picker';\nimport { ContentBlock } from './content_block';\nimport { IconPicker } from './icon_picker';\nimport { Input } from './input';\nimport { NumberPicker } from './number_picker';\n\nexport function FireElementalSection(parentElem: HTMLElement, simUI: IndividualSimUI<any>): ContentBlock {\n\tconst contentBlock = new ContentBlock(parentElem, 'fire-elemental-settings', {\n\t\theader: { title: 'Fire Elemental' },\n\t});\n\n\tconst fireElementalIconContainer = Input.newGroupContainer();\n\tfireElementalIconContainer.classList.add('fire-elemental-icon-container');\n\n\tcontentBlock.bodyElement.appendChild(fireElementalIconContainer);\n\n\tconst fireElementalBooleanIconInput = InputHelpers.makeBooleanIconInput<ShamanSpecs, ShamanTotems, Player<ShamanSpecs>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<ShamanSpecs>) => player,\n\t\t\tgetValue: (player: Player<ShamanSpecs>) => player.getClassOptions().totems || ShamanTotems.create(),\n\t\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: ShamanTotems) => {\n\t\t\t\tconst newOptions = player.getClassOptions();\n\t\t\t\tnewOptions.totems = newVal;\n\t\t\t\tplayer.setClassOptions(eventID, newOptions);\n\n\t\t\t\t// Hacky fix ItemSwapping is in the Rotation proto, this will let the Rotation know to update showWhen\n\t\t\t\t// TODO move the ItemSwap enabled to a spec option and have the ItemSwap proto be apart of player.\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tchangeEmitter: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\t},\n\t\tActionId.fromSpellId(2894),\n\t\t'useFireElemental',\n\t);\n\n\tnew IconPicker(fireElementalIconContainer, simUI.player, fireElementalBooleanIconInput);\n\n\tnew NumberPicker(contentBlock.bodyElement, simUI.player, {\n\t\tpositive: true,\n\t\tlabel: 'Bonus spell power',\n\t\tlabelTooltip: 'Bonus spell power to snapshot Fire Elemental with. Will prioritize dropping Fire Elemental if greater then 0',\n\t\tinline: true,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getClassOptions().totems?.bonusSpellpower || 0,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: number) => {\n\t\t\tconst newOptions = player.getClassOptions();\n\n\t\t\tif (newOptions.totems) {\n\t\t\t\tnewOptions.totems.bonusSpellpower = newVal;\n\t\t\t}\n\n\t\t\tplayer.setClassOptions(eventID, newOptions);\n\t\t},\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t});\n\n\tnew BooleanPicker(contentBlock.bodyElement, simUI.player, {\n\t\tlabel: 'Use Tier 10 (4pc)',\n\t\tlabelTooltip: 'Will use Tier 10 (4pc) to snapshot Fire Elemental.',\n\t\tinline: true,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getClassOptions().totems?.enhTierTenBonus || false,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: boolean) => {\n\t\t\tconst newOptions = player.getClassOptions();\n\n\t\t\tif (newOptions.totems) {\n\t\t\t\tnewOptions.totems.enhTierTenBonus = newVal;\n\t\t\t}\n\n\t\t\tplayer.setClassOptions(eventID, newOptions);\n\t\t},\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.currentStatsEmitter,\n\t\tshowWhen: (player: Player<ShamanSpecs>) => {\n\t\t\tconst hasBonus = player.getCurrentStats().sets.includes(\"Frost Witch's Battlegear (4pc)\");\n\t\t\treturn hasBonus;\n\t\t},\n\t});\n\n\treturn contentBlock;\n}\n"],"names":["ShamanImbueOH","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","ShamanImbue","NoImbue","tooltip","actionId","ActionId","fromSpellId","WindfuryWeapon","FlametongueWeapon","FrostbrandWeapon","SyncTypeInput","InputHelpers.makeSpecOptionsEnumInput","label","labelTooltip","name","ShamanSyncType","Auto","NoSync","SyncMainhandOffhandSwings","DelayOffhandSwings","PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET_FT","P2FtGear","P2_PRESET_WF","P2WfGear","P3_PRESET_ALLIANCE","P3AllianceGear","faction","Faction","Alliance","P3_PRESET_HORDE","P3HordeGear","Horde","P4_PRESET_FT","P4FtGear","P4_PRESET_WF","P4WfGear","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","StandardTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","prime1","ShamanPrimeGlyph","GlyphOfLavaLash","prime2","GlyphOfStormstrike","prime3","GlyphOfWindfuryWeapon","major1","ShamanMajorGlyph","GlyphOfLightningShield","major2","GlyphOfChainLightning","major3","GlyphOfFireNova","minor1","ShamanMinorGlyph","GlyphOfWaterWalking","minor2","GlyphOfRenewedLife","minor3","GlyphOfTheArcticWolf","DefaultOptions","EnhancementShamanOptions","classOptions","shield","ShamanShield","LightningShield","totems","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","fire","FireTotem","MagmaTotem","water","WaterTotem","ManaSpringTotem","air","AirTotem","WindfuryTotem","imbueMh","imbueOh","syncType","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfEndlessRage","food","Food","FoodFishFeast","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","DefaultDebuffs","Debuffs","bloodFrenzy","sunderArmor","ebonPlaguebringer","mangle","criticalMass","demoralizingShout","frostFever","judgement","SPEC_CONFIG","registerSpecConfig","Spec","SpecEnhancementShaman","cssClass","cssScheme","PlayerClasses","getCssClass","Shaman","knownIssues","overwriteDisplayStats","player","playerStats","getCurrentStats","statMod","current","previous","Stats","withStat","Stat","StatSpellPower","fromProto","subtract","getStat","StatAttackPower","base","baseStats","gear","gearStats","talents","talentsStats","buffs","buffsStats","consumes","consumesStats","final","finalStats","stats","epStats","StatAgility","StatIntellect","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatExpertise","StatArmorPenetration","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMastery","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","Presets.P4_PRESET_WF","epWeights","fromMap","StatStrength","Presets.DefaultConsumes","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","vampiricTouch","debuffs","Presets.DefaultDebuffs","playerIconInputs","ShamanInputs.ShamanShieldInput","ShamanInputs.ShamanImbueMH","EnhancementInputs.ShamanImbueOH","includeBuffDebuffInputs","BuffDebuffInputs.ReplenishmentBuff","BuffDebuffInputs.MP5Buff","BuffDebuffInputs.SpellHasteBuff","excludeBuffDebuffInputs","BuffDebuffInputs.BleedDebuff","otherInputs","inputs","EnhancementInputs.SyncTypeInput","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","itemSwapSlots","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","customSections","ShamanInputs.TotemsSection","parentElem","simUI","contentBlock","ContentBlock","header","title","fireElementalIconContainer","Input","newGroupContainer","classList","add","bodyElement","appendChild","fireElementalBooleanIconInput","InputHelpers.makeBooleanIconInput","getModObject","getValue","getClassOptions","setValue","eventID","newVal","newOptions","setClassOptions","rotationChangeEmitter","emit","changeEmitter","specOptionsChangeEmitter","IconPicker","NumberPicker","positive","inline","bonusSpellpower","changedEvent","BooleanPicker","enhTierTenBonus","currentStatsEmitter","showWhen","sets","includes","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_DEFAULT","Presets.PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET_FT","Presets.P2_PRESET_WF","Presets.P3_PRESET_ALLIANCE","Presets.P3_PRESET_HORDE","Presets.P4_PRESET_FT","autoRotation","rotation","raidSimPresets","spec","defaultFactionRaces","Unknown","Race","RaceUnknown","RaceDraenei","RaceOrc","defaultGear","EnhancementShamanSimUI","IndividualSimUI","constructor","super"],"mappings":"ugBAQa,MAAAA,EAAgBC,EAAmF,CAC/GC,UAAW,UACXC,OAAQ,CACP,CAAEC,MAAOC,EAAYC,QAASC,QAAS,uBACvC,CAAEC,SAAUC,EAASC,YAAY,MAAON,MAAOC,EAAYM,gBAC3D,CAAEH,SAAUC,EAASC,YAAY,MAAON,MAAOC,EAAYO,mBAC3D,CAAEJ,SAAUC,EAASC,YAAY,MAAON,MAAOC,EAAYQ,qBAIhDC,EAAgBC,EAAkF,CAC9Gb,UAAW,WACXc,MAAO,uBACPC,aAAc,wfAOdd,OAAQ,CACP,CAAEe,KAAM,YAAad,MAAOe,EAAeC,MAC3C,CAAEF,KAAM,OAAQd,MAAOe,EAAeE,QACtC,CAAEH,KAAM,eAAgBd,MAAOe,EAAeG,2BAC9C,CAAEJ,KAAM,kBAAmBd,MAAOe,EAAeI,gvJCDtCC,GAAiBC,EAA2B,ubAC5CC,GAAYD,EAA2B,YAAaE,IACpDC,GAAeH,EAA2B,eAAgBI,IAC1DC,GAAeL,EAA2B,eAAgBM,IAC1DC,GAAqBP,EAA2B,gBAAiBQ,GAAgB,CAAEC,QAASC,EAAQC,WACpGC,GAAkBZ,EAA2B,gBAAiBa,GAAa,CAAEJ,QAASC,EAAQI,QAC9FC,GAAef,EAA2B,eAAgBgB,IAC1DC,GAAejB,EAA2B,eAAgBkB,IAE1DC,GAA0BC,EAAkC,UAAWC,IAIvEC,GAAkB,CAC9B7B,KAAM,WACN8B,KAAMC,EAAaC,OAAO,CACzBC,cAAe,8BACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAiBC,gBACzBC,OAAQF,EAAiBG,mBACzBC,OAAQJ,EAAiBK,sBACzBC,OAAQC,EAAiBC,uBACzBC,OAAQF,EAAiBG,sBACzBC,OAAQJ,EAAiBK,gBACzBC,OAAQC,EAAiBC,oBACzBC,OAAQF,EAAiBG,mBACzBC,OAAQJ,EAAiBK,0BAKfC,GAAiBC,EAAyB1B,OAAO,CAC7D2B,aAAc,CACbC,OAAQC,EAAaC,gBACrBC,OAAQC,EAAahC,OAAO,CAC3BiC,MAAOC,EAAWC,qBAClBC,KAAMC,EAAUC,WAChBC,MAAOC,EAAWC,gBAClBC,IAAKC,EAASC,gBAEfC,QAAS1F,EAAYM,gBAEtBqF,QAAS3F,EAAYO,kBACrBqF,SAAU9E,EAAeC,OAGb8E,GAAkBC,EAASjD,OAAO,CAC9CkD,cAAeC,EAAQC,cACvBC,MAAOC,EAAMC,mBACbC,KAAMC,EAAKC,gBAGCC,GAAmBC,EAAU5D,OAAO,CAChD6D,kBAAkB,EAClBC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,oBAAoB,EACpBC,sBAAsB,EACtBC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,EACbC,iBAAiB,EACjBC,iBAAiB,EACjBC,WAAW,IAGCC,GAAiBC,EAAQ5E,OAAO,CAC5C6E,aAAa,EACbC,aAAa,EACbC,mBAAmB,EACnBC,QAAQ,EACRC,cAAc,EACdC,mBAAmB,EACnBC,YAAY,EACZC,WAAW,IC9FNC,GAAcC,EAAmBC,EAAKC,sBAAuB,CAClEC,SAAU,4BACVC,UAAWC,EAAcC,YAAYD,EAAcE,QAEnDC,YAAa,GAEbC,sBAAwBC,IACjB,MAAAC,EAAcD,EAAOE,kBAErBC,EAAU,CAACC,EAAoBC,KAC7B,IAAIC,GAAQC,SAASC,EAAKC,eAA6G,IAA7FH,EAAMI,UAAUN,GAASO,SAASL,EAAMI,UAAUL,IAAWO,QAAQJ,EAAKK,kBAUrH,MAAA,CACNC,KARYX,EAAQF,EAAYc,WAShCC,KARYb,EAAQF,EAAYgB,UAAYhB,EAAYc,WASxDG,QARef,EAAQF,EAAYkB,aAAelB,EAAYgB,WAS9DG,MARajB,EAAQF,EAAYoB,WAAapB,EAAYkB,cAS1DG,SARgBnB,EAAQF,EAAYsB,cAAgBtB,EAAYoB,YAShEG,OARa,IAAIlB,GAAQC,SAASC,EAAKC,eAAwF,IAAxEH,EAAMI,UAAUT,EAAYwB,YAAYb,QAAQJ,EAAKK,kBAS5Ga,MAAO,CAAClB,EAAKC,gBAAc,EAK7BkB,QAAS,CACRnB,EAAKoB,YACLpB,EAAKqB,cACLrB,EAAKK,gBACLL,EAAKsB,aACLtB,EAAKuB,cACLvB,EAAKwB,eACLxB,EAAKyB,cACLzB,EAAK0B,qBACL1B,EAAKC,eACLD,EAAK2B,aACL3B,EAAK4B,cACL5B,EAAK6B,eACL7B,EAAK8B,aAENC,cAAe,CAACC,EAAWC,sBAAuBD,EAAWE,sBAE7DC,gBAAiBnC,EAAKK,gBAEtB+B,aAAc,CACbpC,EAAKqC,WACLrC,EAAKsC,YACLtC,EAAKoB,YACLpB,EAAKqB,cACLrB,EAAKK,gBACLL,EAAKsB,aACLtB,EAAKuB,cACLvB,EAAKwB,eACLxB,EAAKyB,cACLzB,EAAK0B,qBACL1B,EAAKC,eACLD,EAAK2B,aACL3B,EAAK4B,cACL5B,EAAK6B,eACL7B,EAAK8B,aAGNS,SAAU,CAET/B,KAAMgC,GAAqBhC,KAE3BiC,UAAW3C,EAAM4C,QAChB,CACC,CAAC1C,EAAKqB,eAAgB,KACtB,CAACrB,EAAKoB,aAAc,KACpB,CAACpB,EAAK2C,cAAe,IACrB,CAAC3C,EAAKC,gBAAiB,KACvB,CAACD,EAAK2B,cAAe,EACrB,CAAC3B,EAAK4B,eAAgB,IACtB,CAAC5B,EAAK6B,gBAAiB,IACvB,CAAC7B,EAAKK,iBAAkB,EACxB,CAACL,EAAKsB,cAAe,KACrB,CAACtB,EAAKuB,eAAgB,IACtB,CAACvB,EAAKwB,gBAAiB,KACvB,CAACxB,EAAK0B,sBAAuB,IAC7B,CAAC1B,EAAKyB,eAAgB,GAEvB,CACC,CAACO,EAAWC,uBAAwB,KACpC,CAACD,EAAWE,sBAAuB,OAIrCpB,SAAU8B,GAEVlC,QAASmC,GAAwBvJ,KAEjCwJ,YAAaC,GAEbC,UAAWC,GACXC,WAAYC,EAAW3J,OAAO,IAC9B4J,gBAAiBC,EAAgB7J,OAAO,CACvC8J,eAAe,IAEhBC,QAASC,IAIVC,iBAAkB,CAACC,IAAkCC,IAA8BC,GAEnFC,wBAAyB,CAACC,EAAoCC,EAA0BC,GACxFC,wBAAyB,CAACC,GAE1BC,YAAa,CACZC,OAAQ,CAACC,EAAiCC,EAA4BC,IAEvEC,cAAe,CAACC,EAASC,iBAAkBD,EAASE,iBACpDC,eAAgB,CAACC,ECxHF,SAAqBC,EAAyBC,GAC7D,MAAMC,EAAe,IAAIC,EAAaH,EAAY,0BAA2B,CAC5EI,OAAQ,CAAEC,MAAO,oBAGZC,EAA6BC,EAAMC,oBACdF,EAAAG,UAAUC,IAAI,iCAE5BR,EAAAS,YAAYC,YAAYN,GAErC,MAAMO,EAAgCC,EACrC,CACCC,aAAerG,GAAgCA,EAC/CsG,SAAWtG,GAAgCA,EAAOuG,kBAAkBxK,QAAUC,EAAahC,SAC3FwM,SAAU,CAACC,EAAkBzG,EAA6B0G,KACnD,MAAAC,EAAa3G,EAAOuG,kBAC1BI,EAAW5K,OAAS2K,EACb1G,EAAA4G,gBAAgBH,EAASE,GAIzB3G,EAAA6G,sBAAsBC,KAAKL,EAAO,EAE1CM,cAAgB/G,GAAgCA,EAAOgH,0BAExDzP,EAASC,YAAY,MACrB,oBA4CM,OAzCP,IAAIyP,EAAWrB,EAA4BL,EAAMvF,OAAQmG,GAEzD,IAAIe,EAAa1B,EAAaS,YAAaV,EAAMvF,OAAQ,CACxDmH,UAAU,EACVrP,MAAO,oBACPC,aAAc,+GACdqP,QAAQ,EACRd,SAAWtG,GAAgCA,EAAOuG,kBAAkBxK,QAAQsL,iBAAmB,EAC/Fb,SAAU,CAACC,EAAkBzG,EAA6B0G,KACnD,MAAAC,EAAa3G,EAAOuG,kBAEtBI,EAAW5K,SACd4K,EAAW5K,OAAOsL,gBAAkBX,GAG9B1G,EAAA4G,gBAAgBH,EAASE,EAAU,EAE3CW,aAAetH,GAAgCA,EAAOgH,2BAGvD,IAAIO,EAAc/B,EAAaS,YAAaV,EAAMvF,OAAQ,CACzDlI,MAAO,oBACPC,aAAc,qDACdqP,QAAQ,EACRd,SAAWtG,GAAgCA,EAAOuG,kBAAkBxK,QAAQyL,kBAAmB,EAC/FhB,SAAU,CAACC,EAAkBzG,EAA6B0G,KACnD,MAAAC,EAAa3G,EAAOuG,kBAEtBI,EAAW5K,SACd4K,EAAW5K,OAAOyL,gBAAkBd,GAG9B1G,EAAA4G,gBAAgBH,EAASE,EAAU,EAE3CW,aAAetH,GAAgCA,EAAOyH,oBACtDC,SAAW1H,GACOA,EAAOE,kBAAkByH,KAAKC,SAAS,oCAKnDpC,CACR,GDkDCqC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAER7G,QAAS,CAACmC,IAEV2E,UAAW,CAACC,IAEZjH,KAAM,CACLkH,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAxF,KAIFyF,aAAezI,GACNiI,GAAgCS,SAASA,SAGlDC,eAAgB,CACf,CACCC,KAAMrJ,EAAKC,sBACX0B,QAASmC,GAAwBvJ,KACjCwJ,YAAaC,GACbjC,SAAU8B,GACVyF,oBAAqB,CACpB,CAAC5P,EAAQ6P,SAAUC,EAAKC,YACxB,CAAC/P,EAAQC,UAAW6P,EAAKE,YACzB,CAAChQ,EAAQI,OAAQ0P,EAAKG,SAEvBC,YAAa,CACZ,CAAClQ,EAAQ6P,SAAU,CAAC,EACpB,CAAC7P,EAAQC,UAAW,CACnB,EAAGiP,GAAkBnH,KACrB,EAAGoH,GAAqBpH,KACxB,EAAGsH,GAA2BtH,KAC9B,EAAGwH,GAAqBxH,MAEzB,CAAC/H,EAAQI,OAAQ,CAChB,EAAG8O,GAAkBnH,KACrB,EAAGoH,GAAqBpH,KACxB,EAAGuH,GAAwBvH,KAC3B,EAAGwH,GAAqBxH,WAOtB,MAAMoI,WAA+BC,EAC3C,WAAAC,CAAYhE,EAAyBtF,GAC9BuJ,MAAAjE,EAAYtF,EAAQX,GAC3B"}