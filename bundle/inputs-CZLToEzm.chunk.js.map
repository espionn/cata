{"version":3,"file":"inputs-CZLToEzm.chunk.js","sources":["../../../ui/shaman/inputs.ts"],"sourcesContent":["import { ContentBlock } from '../core/components/content_block';\nimport { IconEnumPicker } from '../core/components/icon_enum_picker';\nimport { IconPicker } from '../core/components/icon_picker';\nimport { Input } from '../core/components/input';\nimport * as InputHelpers from '../core/components/input_helpers';\nimport { IndividualSimUI } from '../core/individual_sim_ui';\nimport { Player } from '../core/player';\nimport { Spec } from '../core/proto/common';\nimport { AirTotem, EarthTotem, FireTotem, ShamanImbue, ShamanShield, ShamanTotems, WaterTotem } from '../core/proto/shaman';\nimport { ActionId } from '../core/proto_utils/action_id';\nimport { ShamanSpecs } from '../core/proto_utils/utils';\nimport { EventID } from '../core/typed_event';\n\n// Configuration for class-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ShamanShieldInput = <SpecType extends ShamanSpecs>() =>\n\tInputHelpers.makeClassOptionsEnumIconInput<SpecType, ShamanShield>({\n\t\tfieldName: 'shield',\n\t\tvalues: [\n\t\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\n\t\t\t{ actionId: ActionId.fromSpellId(52127), value: ShamanShield.WaterShield },\n\t\t\t{ actionId: ActionId.fromSpellId(324), value: ShamanShield.LightningShield },\n\t\t],\n\t});\n\nexport const ShamanImbueMH = <SpecType extends ShamanSpecs>() =>\n\tInputHelpers.makeClassOptionsEnumIconInput<SpecType, ShamanImbue>({\n\t\tfieldName: 'imbueMh',\n\t\tvalues: [\n\t\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Main Hand Enchant' },\n\t\t\t{ actionId: ActionId.fromSpellId(8232), value: ShamanImbue.WindfuryWeapon },\n\t\t\t{ actionId: ActionId.fromSpellId(8024), value: ShamanImbue.FlametongueWeapon },\n\t\t\t{ actionId: ActionId.fromSpellId(8033), value: ShamanImbue.FrostbrandWeapon },\n\t\t],\n\t});\n\nexport function TotemsSection(parentElem: HTMLElement, simUI: IndividualSimUI<any>): ContentBlock {\n\tconst contentBlock = new ContentBlock(parentElem, 'totems-settings', {\n\t\theader: { title: 'Totems' },\n\t});\n\n\tconst totemDropdownGroup = Input.newGroupContainer();\n\ttotemDropdownGroup.classList.add('totem-dropdowns-container', 'icon-group');\n\n\tconst fireElementalContainer = document.createElement('div');\n\tfireElementalContainer.classList.add('fire-elemental-input-container');\n\n\tcontentBlock.bodyElement.appendChild(totemDropdownGroup);\n\tcontentBlock.bodyElement.appendChild(fireElementalContainer);\n\n\tconst _earthTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: ['earth-totem-picker'],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffdfba', value: EarthTotem.NoEarthTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8075), value: EarthTotem.StrengthOfEarthTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8071), value: EarthTotem.StoneskinTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8143), value: EarthTotem.TremorTotem },\n\t\t],\n\t\tequals: (a: EarthTotem, b: EarthTotem) => a == b,\n\t\tzeroValue: EarthTotem.NoEarthTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().classOptions?.totems?.earth || EarthTotem.NoEarthTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.classOptions?.totems) newOptions.classOptions!.totems = ShamanTotems.create();\n\t\t\tnewOptions.classOptions!.totems.earth = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\tconst _waterTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: ['water-totem-picker'],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#bae1ff', value: WaterTotem.NoWaterTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(5675), value: WaterTotem.ManaSpringTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(5394), value: WaterTotem.HealingStreamTotem },\n\t\t],\n\t\tequals: (a: WaterTotem, b: WaterTotem) => a == b,\n\t\tzeroValue: WaterTotem.NoWaterTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().classOptions?.totems?.water || WaterTotem.NoWaterTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.classOptions?.totems) newOptions.classOptions!.totems = ShamanTotems.create();\n\t\t\tnewOptions.classOptions!.totems.water = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\tconst _fireTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: ['fire-totem-picker'],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffb3ba', value: FireTotem.NoFireTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(78770), value: FireTotem.MagmaTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(3599), value: FireTotem.SearingTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8227), value: FireTotem.FlametongueTotem },\n\t\t],\n\t\tequals: (a: FireTotem, b: FireTotem) => a == b,\n\t\tzeroValue: FireTotem.NoFireTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().classOptions?.totems?.fire || FireTotem.NoFireTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.classOptions?.totems) newOptions.classOptions!.totems = ShamanTotems.create();\n\t\t\tnewOptions.classOptions!.totems.fire = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\tconst _airTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: ['air-totem-picker'],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#baffc9', value: AirTotem.NoAirTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8512), value: AirTotem.WindfuryTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(3738), value: AirTotem.WrathOfAirTotem },\n\t\t],\n\t\tequals: (a: AirTotem, b: AirTotem) => a == b,\n\t\tzeroValue: AirTotem.NoAirTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().classOptions?.totems?.air || AirTotem.NoAirTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.classOptions?.totems) newOptions.classOptions!.totems = ShamanTotems.create();\n\t\t\tnewOptions.classOptions!.totems.air = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\t// Enchancement Shaman uses the Fire Elemental Inputs with custom inputs.\n\tif (simUI.player.getSpec() != Spec.SpecEnhancementShaman) {\n\t\tconst fireElementalBooleanIconInput = InputHelpers.makeBooleanIconInput<ShamanSpecs, ShamanTotems, Player<ShamanSpecs>>(\n\t\t\t{\n\t\t\t\tgetModObject: (player: Player<ShamanSpecs>) => player,\n\t\t\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().classOptions?.totems || ShamanTotems.create(),\n\t\t\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: ShamanTotems) => {\n\t\t\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\t\t\tnewOptions.classOptions!.totems = newVal;\n\t\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t\t\t},\n\t\t\t\tchangeEmitter: (player: Player<any>) => player.specOptionsChangeEmitter,\n\t\t\t},\n\t\t\tActionId.fromSpellId(2894),\n\t\t\t'useFireElemental',\n\t\t);\n\n\t\tnew IconPicker(fireElementalContainer, simUI.player, fireElementalBooleanIconInput);\n\t}\n\n\treturn contentBlock;\n}\n"],"names":["ShamanShieldInput","InputHelpers.makeClassOptionsEnumIconInput","fieldName","values","value","ShamanShield","NoShield","tooltip","actionId","ActionId","fromSpellId","WaterShield","LightningShield","ShamanImbueMH","ShamanImbue","NoImbue","WindfuryWeapon","FlametongueWeapon","FrostbrandWeapon","TotemsSection","parentElem","simUI","contentBlock","ContentBlock","header","title","totemDropdownGroup","Input","newGroupContainer","classList","add","fireElementalContainer","document","createElement","bodyElement","appendChild","IconEnumPicker","player","extraCssClasses","numColumns","color","EarthTotem","NoEarthTotem","StrengthOfEarthTotem","StoneskinTotem","TremorTotem","equals","a","b","zeroValue","changedEvent","specOptionsChangeEmitter","getValue","getSpecOptions","classOptions","totems","earth","setValue","eventID","newValue","newOptions","ShamanTotems","create","setSpecOptions","WaterTotem","NoWaterTotem","ManaSpringTotem","HealingStreamTotem","water","FireTotem","NoFireTotem","MagmaTotem","SearingTotem","FlametongueTotem","fire","AirTotem","NoAirTotem","WindfuryTotem","WrathOfAirTotem","air","getSpec","Spec","SpecEnhancementShaman","fireElementalBooleanIconInput","InputHelpers.makeBooleanIconInput","getModObject","newVal","changeEmitter","IconPicker"],"mappings":"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"}