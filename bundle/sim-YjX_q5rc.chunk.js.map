{"version":3,"file":"sim-YjX_q5rc.chunk.js","sources":["../../../ui/priest/shadow/presets.ts","../../../ui/priest/shadow/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { Consumes, Debuffs, Flask, Food, Glyphs, IndividualBuffs, Potions, Profession, RaidBuffs, TristateEffect } from '../../core/proto/common.js';\nimport {\n\tPriestPrimeGlyph as PrimeGlyph,\n\tPriestMajorGlyph as MajorGlyph,\n\tPriestMinorGlyph as MinorGlyph,\n\tPriestOptions_Armor,\n\tShadowPriest_Options as Options,\n} from '../../core/proto/priest.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport DefaultApl from './apls/default.apl.json';\nimport P1Gear from './gear_sets/p1.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\n\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://www.wowhead.com/cata/talent-calc/priest and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '032212--322032210201222100231',\n\t\tglyphs: Glyphs.create({\n\t\t\tprime1: PrimeGlyph.GlyphOfShadowWordPain,\n\t\t\tprime2: PrimeGlyph.GlyphOfMindFlay,\n\t\t\tprime3: PrimeGlyph.GlyphOfShadowWordDeath,\n\t\t\tmajor1: MajorGlyph.GlyphOfFade,\n\t\t\tmajor2: MajorGlyph.GlyphOfInnerFire,\n\t\t\tmajor3: MajorGlyph.GlyphOfSpiritTap,\n\t\t\tminor1: MinorGlyph.GlyphOfFading,\n\t\t\tminor2: MinorGlyph.GlyphOfFortitude,\n\t\t\tminor3: MinorGlyph.GlyphOfShadowfiend,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = Options.create({\n\tclassOptions: {\n\t\tarmor: PriestOptions_Armor.InnerFire,\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheDraconicMind,\n\tfood: Food.FoodSeafoodFeast,\n\tdefaultPotion: Potions.VolcanicPotion,\n\tprepopPotion: Potions.VolcanicPotion,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tmarkOfTheWild: true,\n\ticyTalons: true,\n\tmoonkinForm: true,\n\tleaderOfThePack: true,\n\tpowerWordFortitude: true,\n\tstrengthOfEarthTotem: true,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n\tdemonicPact: true,\n\tblessingOfKings: true,\n\tblessingOfMight: true,\n\tcommunion: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tvampiricTouch: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tsunderArmor: true,\n\tebonPlaguebringer: true,\n\tmangle: true,\n\tcriticalMass: true,\n\tdemoralizingShout: true,\n\tfrostFever: true,\n\tjudgement: true,\n});\n\nexport const OtherDefaults = {\n\tchannelClipDelay: 100,\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Enchanting,\n\tprofession2: Profession.Tailoring,\n};\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs';\nimport * as OtherInputs from '../../core/components/other_inputs';\nimport * as Mechanics from '../../core/constants/mechanics';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl';\nimport { Faction, PartyBuffs, Race, Spec, Stat } from '../../core/proto/common';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as PriestInputs from '../inputs';\n// import * as ShadowPriestInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecShadowPriest, {\n\tcssClass: 'shadow-priest-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Priest),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\"Some items may display and use stats a litle higher than their original value.\"],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellHit, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMastery],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMastery,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecShadowPriest>) => {\n\t// \tlet stats = new Stats();\n\t// \tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 1.2,\n\t\t\t[Stat.StatSpirit]: 0.47,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.87,\n\t\t\t[Stat.StatSpellCrit]: 0.74,\n\t\t\t[Stat.StatSpellHaste]: 0.87,\n\t\t\t[Stat.StatMastery]: 0.58\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [PriestInputs.ArmorInput()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.ReplenishmentBuff,\n\t\tBuffDebuffInputs.MeleeHasteBuff,\n\t\tBuffDebuffInputs.CritBuff,\n\t\tBuffDebuffInputs.MP5Buff,\n\t\tBuffDebuffInputs.AttackPowerPercentBuff,\n\t\tBuffDebuffInputs.StaminaBuff,\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.TankAssignment, OtherInputs.ChannelClipDelay, OtherInputs.DistanceFromTarget, OtherInputs.DarkIntentUptime,],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: true,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.StandardTalents],\n\t\trotations: [Presets.ROTATION_PRESET_DEFAULT],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.P1_PRESET],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecShadowPriest>): APLRotation => {\n\t\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecShadowPriest,\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceWorgen,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ShadowPriestSimUI extends IndividualSimUI<Spec.SpecShadowPriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecShadowPriest>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["P1_PRESET","PresetUtils.makePresetGear","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","StandardTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","prime1","PrimeGlyph","GlyphOfShadowWordPain","prime2","GlyphOfMindFlay","prime3","GlyphOfShadowWordDeath","major1","MajorGlyph","GlyphOfFade","major2","GlyphOfInnerFire","major3","GlyphOfSpiritTap","minor1","MinorGlyph","GlyphOfFading","minor2","GlyphOfFortitude","minor3","GlyphOfShadowfiend","DefaultOptions","Options","classOptions","armor","PriestOptions_Armor","InnerFire","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheDraconicMind","food","Food","FoodSeafoodFeast","defaultPotion","Potions","VolcanicPotion","prepopPotion","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","DefaultIndividualBuffs","IndividualBuffs","vampiricTouch","DefaultDebuffs","Debuffs","bloodFrenzy","sunderArmor","ebonPlaguebringer","mangle","criticalMass","demoralizingShout","frostFever","judgement","OtherDefaults","channelClipDelay","distanceFromTarget","profession1","Profession","Enchanting","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecShadowPriest","cssClass","cssScheme","PlayerClasses","getCssClass","Priest","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMastery","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","PriestInputs.ArmorInput","includeBuffDebuffInputs","BuffDebuffInputs.ReplenishmentBuff","BuffDebuffInputs.MeleeHasteBuff","BuffDebuffInputs.CritBuff","BuffDebuffInputs.MP5Buff","BuffDebuffInputs.AttackPowerPercentBuff","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.ChannelClipDelay","OtherInputs.DistanceFromTarget","OtherInputs.DarkIntentUptime","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_DEFAULT","autoRotation","player","rotation","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceWorgen","Horde","RaceTroll","defaultGear","ShadowPriestSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"6lFAgBaA,EAAYC,EAA2B,+mBAEvCC,EAA0BC,EAAkC,UAAWC,GAIvEC,EAAkB,CAC9BC,KAAM,WACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,gCACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAWC,sBACnBC,OAAQF,EAAWG,gBACnBC,OAAQJ,EAAWK,uBACnBC,OAAQC,EAAWC,YACnBC,OAAQF,EAAWG,iBACnBC,OAAQJ,EAAWK,iBACnBC,OAAQC,EAAWC,cACnBC,OAAQF,EAAWG,iBACnBC,OAAQJ,EAAWK,wBAKTC,EAAiBC,EAAQ1B,OAAO,CAC5C2B,aAAc,CACbC,MAAOC,EAAoBC,aAIhBC,EAAkBC,EAAShC,OAAO,CAC9CiC,MAAOC,EAAMC,uBACbC,KAAMC,EAAKC,iBACXC,cAAeC,EAAQC,eACvBC,aAAcF,EAAQC,iBAGVE,EAAmBC,EAAU5C,OAAO,CAChD6C,kBAAkB,EAClBC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,oBAAoB,EACpBC,sBAAsB,EACtBC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,EACbC,iBAAiB,EACjBC,iBAAiB,EACjBC,WAAW,IAGCC,EAAyBC,EAAgB5D,OAAO,CAC5D6D,eAAe,IAGHC,EAAiBC,EAAQ/D,OAAO,CAC5CgE,aAAa,EACbC,aAAa,EACbC,mBAAmB,EACnBC,QAAQ,EACRC,cAAc,EACdC,mBAAmB,EACnBC,YAAY,EACZC,WAAW,IAGCC,EAAgB,CAC5BC,iBAAkB,IAClBC,mBAAoB,GACpBC,YAAaC,EAAWC,WACxBC,YAAaF,EAAWG,WC5EnBC,EAAcC,EAAmBC,EAAKC,iBAAkB,CAC7DC,SAAU,uBACVC,UAAWC,EAAcC,YAAYD,EAAcE,QAEnDC,YAAa,CAAC,kFAGdC,QAAS,CAACC,EAAKC,cAAeD,EAAKE,WAAYF,EAAKG,eAAgBH,EAAKI,aAAcJ,EAAKK,cAAeL,EAAKM,eAAgBN,EAAKO,aAErIC,gBAAiBR,EAAKG,eAEtBM,aAAc,CACbT,EAAKU,WACLV,EAAKW,SACLX,EAAKY,YACLZ,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,aAWNM,SAAU,CAETC,KAAMC,EAAkBD,KAExBE,UAAWC,EAAMC,QAAQ,CACxB,CAAClB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,cAAe,IACrB,CAACJ,EAAKK,eAAgB,IACtB,CAACL,EAAKM,gBAAiB,IACvB,CAACN,EAAKO,aAAc,MAGrBY,SAAUC,EAEVC,QAASC,EAAwBnH,KAEjCoH,YAAaC,EAEbC,UAAWC,EAEXC,WAAYC,EAAWvH,OAAO,IAE9BwH,gBAAiBC,EAEjBC,QAASC,EAETC,MAAOC,GAIRC,iBAAkB,CAACC,KAEnBC,wBAAyB,CACxBC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEDC,wBAAyB,GAEzBC,YAAa,CACZC,OAAQ,CAACC,EAA4BC,EAA8BC,EAAgCC,IAEpGC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERhC,QAAS,CAACC,GACVgC,UAAW,CAACC,GAEZzC,KAAM,CAACC,IAGRyC,aAAeC,GACNF,EAAgCG,SAASA,SAGlDC,eAAgB,CACf,CACCC,KAAMrE,EAAKC,iBACX6B,QAASC,EAAwBnH,KACjCoH,YAAaC,EACbL,SAAUC,EACVyC,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,WACzB,CAACL,EAAQM,OAAQJ,EAAKK,WAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGnD,EAAkBD,MAEtB,CAACgD,EAAQM,OAAQ,CAChB,EAAGrD,EAAkBD,WAOnB,MAAMyD,UAA0BC,EACtC,WAAAC,CAAYC,EAAyBjB,GAC9BkB,MAAAD,EAAYjB,EAAQpE,EAC3B"}